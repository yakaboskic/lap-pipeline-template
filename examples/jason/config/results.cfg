magma!title Results pipeline for priors

#change this to your install
#checkout via 'svn co https://svn/lap'
lap_home=/home/unix/flannick/lap

#run with
#perl $lap_home/trunk/bin/run.pl --meta /path/to/meta/file

#web UI at
#https://intranet.broadinstitute.org/~flannick/lap/
#type in full path of meta file

#====================
#CLASSES

#These are the levels at which files will be created and commands will be run
#You load instances for each class in the companion meta file
#A file assigned to the class will be created for each instance in the class
#A command assisnged to the class will run once per instance
#Classes are a tree structure, so ancestors have parents and descendents
#Each instance has properties, which by default are its instance name, ancestor instance names, and descendent instance names (accessible via @'class')

class project=Project
class paper_project=Paper Project parent project
class gene_set_list=Gene Set List parent project
class trait=Trait parent project
class gene_bf=Gene BF parent trait
class magma=Magma parent trait
class magma_gsa=Magma GSA parent magma
class depict=Depict parent trait
class pops=PoPS parent magma
class result=Result parent trait
class paper_result=Paper Result parent result
class result_chrom=Result Chrom parent result
class result_rep=Result Rep parent result
class factor=Factor parent result
class factor_phewas=Factor PheWAS parent factor
class enrichment=Enrichment parent result
class gene_inspection=Gene Inspection parent result
class gene_set_inspection=Gene Set Inspection parent result
class comparison=Comparison parent trait

#CLASSES
#====================

#====================
#DIRECTORIES

#syntax is (prefix1) (prefix2) ... (prefixN) key=value (postfix1=value1) (postfix2=value2) ... (postfixN=valueN)
#can access value via $key
#unix_out_dir is special key defined in accompanying meta file
sortable mkdir path projects_dir=$unix_out_dir/projects
#class_level (class) postfix indicates to create a directory for each instance in this class
#sortable prefix means can sort files within this directory via the Web UI
#mkdir prefix means make this directory when you initialize the project
#path prefix means this is a UNIX path
sortable mkdir path project_dir=$projects_dir/@project class_level project
sortable mkdir path paper_projects_dir=$project_dir/paper_projects class_level project
sortable mkdir path paper_project_dir=$paper_projects_dir/@paper_project class_level paper_project
sortable mkdir path gene_set_lists_dir=$project_dir/gene_set_lists class_level trait
sortable mkdir path gene_set_list_dir=$gene_set_lists_dir/@gene_set_list class_level gene_set_list
sortable mkdir path traits_dir=$project_dir/traits class_level project
sortable mkdir path trait_dir=$traits_dir/@trait class_level trait
sortable mkdir path magmas_dir=$trait_dir/magmas class_level trait
sortable mkdir path magma_dir=$magmas_dir/@magma class_level magma
sortable mkdir path magma_gsas_dir=$magma_dir/magma_gsas class_level magma
sortable mkdir path depicts_dir=$trait_dir/depicts class_level trait
sortable mkdir path depict_dir=$depicts_dir/@depict class_level depict
sortable mkdir path popss_dir=$magma_dir/popss class_level magma
sortable mkdir path pops_dir=$popss_dir/@pops class_level pops
sortable mkdir path gene_bfs_dir=$trait_dir/gene_bfs class_level trait
sortable mkdir path results_dir=$trait_dir/results class_level trait
sortable mkdir path result_dir=$results_dir/@result class_level result
sortable mkdir path paper_results_dir=$result_dir/paper_results class_level result
sortable mkdir path paper_result_dir=$paper_results_dir/@paper_result class_level paper_result
sortable mkdir path factors_dir=$result_dir/factors class_level result
sortable mkdir path factor_dir=$factors_dir/@factor class_level factor
sortable mkdir path factor_phewass_dir=$factor_dir/factor_phewass class_level factor
sortable mkdir path factor_phewas_dir=$factor_phewass_dir/@factor_phewas class_level factor_phewas
sortable mkdir path result_chrom_dir=$result_dir/result_chroms class_level result
sortable mkdir path result_rep_dir=$result_dir/result_reps class_level result
sortable mkdir path enrichments_dir=$result_dir/enrichments class_level result
sortable mkdir path gene_inspections_dir=$result_dir/gene_inspections class_level result
sortable mkdir path gene_set_inspections_dir=$result_dir/gene_set_inspections class_level result
sortable mkdir path comparisons_dir=$project_dir/comparisons class_level project
sortable mkdir path comparison_dir=$comparisons_dir/@comparison class_level comparison

#DIRECTORIES
#====================


#====================
#CATEGORIES

#cat prefix indicates a category to display on the web UI
#you will assign files to categories to dictate their display
#categories can be hierarchical (via parent)
#class_level indicates which page they will be displayed on (there is one page for each class level)
#disp postfix is the header to show
cat cat_project_data=null disp "Project files" class_level project
cat cat_gene_set_list_data=null disp "Gene Set List files" class_level gene_set_list
cat cat_trait_data=null disp "Trait files" class_level trait
cat cat_magma_data=null disp "Magma files" class_level magma
cat cat_magma_gsa_data=null disp "Magma GSA files" class_level magma_gsa
cat cat_depict_data=null disp "Depict files" class_level depict
cat cat_pops_data=null disp "Pops files" class_level pops
cat cat_gene_bf_data=null disp "Gene BF files" class_level gene_bf
cat cat_result_data=null disp "Result files" class_level result
cat cat_paper_result_data=null disp "Paper result files" class_level paper_result
cat cat_paper_project_data=null disp "Paper project files" class_level paper_project
cat cat_result_chrom_data=null disp "Result Chrom files" class_level result_chrom
cat cat_result_rep_data=null disp "Result Rep files" class_level result_rep
cat cat_factor_data=null disp "Factor files" class_level factor
cat cat_factor_phewas_data=null disp "Factor PheWAS files" class_level factor_phewas
cat cat_gene_inspection_data=null disp "Gene Inspection files" class_level gene_inspection
cat cat_gene_set_inspection_data=null disp "Gene Set Inspection files" class_level gene_set_inspection
cat cat_comparison_data=null disp "Comparison files" class_level comparison

#CATEGORIES
#====================

#====================
#UTILS

#these are some useful commands you may want to use
lap_trunk=$lap_home/trunk
lap_projects=$lap_home/projects
common_bin_dir=$lap_projects/common
targeted_bin_dir=$lap_projects/targeted/bin
ldsc_bin_dir=$lap_projects/ldsc/bin

#config files can be included
#common.cfg is required
!include $lap_trunk/config/common.cfg

python_for_calc=python

calc_cmd=$python_for_calc -u $ldsc_bin_dir/priors.py
factor_phewas_cmd=$python_for_calc -u $ldsc_bin_dir/factor_phewas.py
factor_graph_cmd=source activate graph_env && $python_for_calc -u $ldsc_bin_dir/factor_graph.py
generate_effect_ranges_cmd=$python_for_calc $ldsc_bin_dir/generate_effect_ranges.py
magma_cmd=/home/unix/flannick/links/targeted/lib/magma/magma
depict_home=/home/unix/flannick/links/targeted/lib/depict
depict_cmd=python $depict_home/src/python/depict.py
pops_home=/home/unix/flannick/links/ldsc/results/raw/pops/pops
pops_cmd=python $pops_home/pops.py
pops_munge_cmd=python $pops_home/munge_feature_directory.py



#these are some useful scripts I wrote to process files
conditional_exec_cmd=perl $common_bin_dir/conditional_exec.pl
#join multiple files or commands
smart_join_cmd=perl $common_bin_dir/smart_join.pl
#concatenate / cut files or commands
smart_cut_cmd=perl $common_bin_dir/smart_cut.pl
add_function_cmd=perl $common_bin_dir/smart_cut.pl
bin_values_cmd=perl $common_bin_dir/bin_values.pl
#this can add a new column that's a function of other columns (add, divide, log, abs, etc.)
add_header_cmd=perl $common_bin_dir/add_header.pl
#transpose a file
transpose_cmd=perl $common_bin_dir/transpose.pl
#generate a nice pdf from the file
table_to_beamer_cmd=perl $common_bin_dir/table_to_beamer.pl
text_to_beamer_cmd=perl $common_bin_dir/text_to_beamer.pl
#pretty print columns (e.g. %.3g)
format_columns_cmd=perl $common_bin_dir/format_columns.pl
vcf_utils_cmd=perl $targeted_bin_dir/vcf_utils.pl
table_sum_stats_cmd=perl $common_bin_dir/table_sum_stats.pl
add_gene_annot_cmd=python $targeted_bin_dir/add_gene_annot.py

draw_qq_plot_cmd=Rscript $common_bin_dir/draw_qq_plot.R
draw_matrix_plot_cmd=Rscript $common_bin_dir/draw_matrix_plot.R

#cmd_class prefix tells it to match on value of the key and then execute the postfixes
#postfix use_mod says run "use" when this command is run
#so just using "Rscript" in commands below will automatically load R-3.4
cmd_class rscript_cmd_class=Rscript use_mod R-3.4
cmd_class tabix_cmd_class=tabix use_mod Tabix
#cmd_class plink_cmd_class=plink use_mod PLINK2
cmd_class depict_cmd_class=depict use_mod 

#UTILS
#====================

#====================
#PARAMETERS

#miscellaneous variables can be defined here

#PARAMETERS
#====================

#====================
#CONSTANTS


#CONSTANTS
#====================


#====================
#FILES

#define one file for each input/output you want to use in commands
#dir postfix says where it will live; must be a key
#disp postfix says what to title it on the web UI
#parent postfix says which category to show it in on the web UI
#class_level says to create the file for each instance in the class
#file prefix is required to identify this key as a file
#the key is the name of the file (you'll use this to define it as a command input/output)
#the value is the value of the file on disk; you need to use properties to make sure each instance has a unique value

#Files generated once per project

nohead table path file project_geneloc_file=@project.gene.loc dir project_dir disp ".gene.loc" parent cat_project_data class_level project
nohead table path file project_pops_geneloc_file=@project.pops.gene.loc dir project_dir disp ".pops.gene.loc" parent cat_project_data class_level project
nohead table path file project_pops_gene_annot_file=@project.pops.gene.annot dir project_dir disp ".pops.gene.annot" parent cat_project_data class_level project

prop is_dense=scalar
prop is_list_of_lists=scalar

path file gene_set_list_file=@gene_set_list.txt dir gene_set_lists_dir disp ".gene_set_list.txt" parent cat_gene_set_list_data class_level gene_set_list

gene_set_list_feature_trunk=@gene_set_list.features dir gene_set_list_dir

minor path file gene_set_list_feature_rows_file=$gene_set_list_feature_trunk.rows.txt dir gene_set_list_dir disp ".features.rows.txt" parent cat_gene_set_list_data class_level gene_set_list


#Files generated once per trait

path file trait_sumstats_file=@trait.sumstats.gz dir trait_dir disp ".sumtats.gz" parent cat_trait_data class_level trait
path file trait_chrom_pos_sumstats_file=@trait.chrom_pos.sumstats.gz dir trait_dir disp ".chom_pos.sumtats.gz" parent cat_trait_data class_level trait

table path file trait_exomes_file=@trait.exomes.txt dir trait_dir disp ".exomes.txt" parent cat_trait_data class_level trait
table path file trait_gwas_genes_file=@trait.gwas_genes.txt dir trait_dir disp ".gwas_genes.txt" parent cat_trait_data class_level trait
table path file trait_positive_controls_file=@trait.positive_controls.txt dir trait_dir disp ".positive_controls.txt" parent cat_trait_data class_level trait

path file trait_simulate_gene_x_gene_sets_file=@trait.simulate.gene_x_gene_sets.txt dir trait_dir disp "simulate.gene_x_gene_sets.txt" parent cat_trait_data class_level trait

!!expand:gene_set:gene:gene_set! \
table path file trait_known_gene_set_betas_file=@trait.known.gene_set_betas.txt dir trait_dir disp ".known.gene_set_betas.txt" parent cat_trait_data class_level trait

table path file trait_snploc_file=@trait.snploc dir trait_dir disp ".snploc" parent cat_trait_data class_level trait

#ID, PVAL
table path file trait_pval_file=@trait.pval dir trait_dir disp ".pval" parent cat_trait_data class_level trait

#Files generated once per magma

magma_annot_trunk=@magma dir magma_dir
magma_pops_annot_trunk=@magma.pops dir magma_dir

path file magma_annot_file=$magma_annot_trunk.genes.annot dir magma_dir disp ".genes.annot" parent cat_magma_data class_level magma
table path file magma_genes_out_file=$magma_annot_trunk.genes.out dir magma_dir disp ".genes.out" parent cat_magma_data class_level magma
path file magma_genes_raw_file=$magma_annot_trunk.genes.raw dir magma_dir disp ".genes.raw" parent cat_magma_data class_level magma
path file magma_log_file=$magma_annot_trunk.log dir magma_dir disp ".log" parent cat_magma_data class_level magma

path file magma_pops_annot_file=$magma_pops_annot_trunk.genes.annot dir magma_dir disp ".pops.genes.annot" parent cat_magma_data class_level magma
table path file magma_pops_genes_out_file=$magma_pops_annot_trunk.genes.out dir magma_dir disp ".pops.genes.out" parent cat_magma_data class_level magma
path file magma_pops_genes_raw_file=$magma_pops_annot_trunk.genes.raw dir magma_dir disp ".pops.genes.raw" parent cat_magma_data class_level magma
path file magma_pops_log_file=$magma_pops_annot_trunk.log dir magma_dir disp ".pops.log" parent cat_magma_data class_level magma

#Files generated once per MAGMA GSA

magma_gsa_trunk=@magma_gsa dir magma_gsas_dir

table path file magma_gsa_out_file=$magma_gsa_trunk.gsa.out dir magma_gsas_dir disp ".gsa.out" parent cat_magma_gsa_data class_level magma_gsa
path file magma_gsa_set_genes_out_file=$magma_gsa_trunk.gsa.sets.genes.out dir magma_gsas_dir disp ".gsa.sets.genes.out" parent cat_magma_gsa_data class_level magma_gsa
path file magma_gsa_log_file=$magma_gsa_trunk.log dir magma_gsas_dir disp ".log" parent cat_magma_gsa_data class_level magma_gsa

#Files generated once per depict

depict_annot_trunk=@depict.out dir depict_dir

minor path file depict_cfg_file=$depict_annot_trunk.depict.cfg dir depict_dir disp ".depict.cfg" parent cat_depict_data class_level depict

path file depict_loci_file=${depict_annot_trunk}_loci.txt dir depict_dir disp ".depict.loci.txt" parent cat_depict_data class_level depict
major table path file depict_geneprioritization_file=${depict_annot_trunk}_geneprioritization.txt dir depict_dir disp ".depict.geneprioritization.txt" parent cat_depict_data class_level depict
major table path file depict_genesetenrichment_file=${depict_annot_trunk}_genesetenrichment.txt dir depict_dir disp ".depict.genesetenrichment.txt" parent cat_depict_data class_level depict
major table path file depict_tissueenrichment_file=${depict_annot_trunk}_tissueenrichment.txt dir depict_dir disp ".depict.tissueenrichment.txt" parent cat_depict_data class_level depict

#Files generated once per Pops

pops_annot_trunk=@pops dir pops_dir

major table path file pops_coefs_file=${pops_annot_trunk}.coefs dir pops_dir disp ".coefs" parent cat_pops_data class_level pops

major table path file pops_marginals_file=${pops_annot_trunk}.marginals dir pops_dir disp ".marginals" parent cat_pops_data class_level pops

table path file pops_preds_file=${pops_annot_trunk}.preds dir pops_dir disp ".preds" parent cat_pops_data class_level pops

minor table path file pops_log_file=${pops_annot_trunk}.log dir pops_dir disp ".log" parent cat_pops_data class_level pops

major table path file pops_mapped_preds_file=${pops_annot_trunk}.mapped.preds dir pops_dir disp ".mapped.preds" parent cat_pops_data class_level pops

#Files generated once per gene_bf

table path file gene_bf_genes_bf_file=@gene_bf.gene_bf.out dir gene_bfs_dir disp ".gene_bf.out" parent cat_gene_bf_data class_level gene_bf

#Files generated once per result

table path file result_in_file=@result.in dir result_dir disp ".in" parent cat_result_data class_level result

minor table path file result_cor_file=@result.cor dir result_dir disp ".cor" parent cat_result_data class_level result

!!expand:result:result:result_chrom:result_rep! \
minor path file result_warnings_file=@result.warnings dir result_dir disp ".warnings" parent cat_result_data class_level result

!!expand:result:result:result_chrom:result_rep! \
major path file result_log_file=@result.log dir result_dir disp ".log" parent cat_result_data class_level result

path file result_priors_log_file=@result.priors.log dir result_dir disp ".priors.log" parent cat_result_data class_level result

!!expand:result:result:result_rep! \
minor table path file result_gene_stats_trace_out_gz_file=@result.gene_stats.trace.out.gz dir result_dir disp ".gene_stats.trace.out.gz" parent cat_result_data class_level result

!!expand:result:result:result_rep! \
minor table path file result_gene_set_stats_trace_out_gz_file=@result.gene_set_stats.trace.out.gz dir result_dir disp ".gene_set_stats.trace.out.gz" parent cat_result_data class_level result

!!expand:result:result:result_chrom:result_rep! \
major table path file result_gene_set_stats_out_file=@result.gene_set_stats.out dir result_dir disp ".gene_set_stats.out" parent cat_result_data class_level result

!!expand:result:result:result_chrom:result_rep! \
major table path file result_gene_stats_out_file=@result.gene_stats.out dir result_dir disp ".gene_stats.out" parent cat_result_data class_level result

!!expand:result:result:result_chrom! \
major table path file result_gene_gene_set_stats_out_file=@result.gene_gene_set_stats.out dir result_dir disp ".gene_gene_set_stats.out" parent cat_result_data class_level result

table path file result_gene_set_overlap_stats_out_file=@result.gene_set_overlap_stats.out dir result_dir disp ".gene_set_overlap_stats.out" parent cat_result_data class_level result

table path file result_gene_effectors_out_file=@result.gene_effectors.out dir result_dir disp ".gene_effectors.out" parent cat_result_data class_level result

path file factor_factors_log_file=@factor.factors.log dir factor_dir disp ".factors.log" parent cat_factor_data class_level factor

major table path file factor_factors_out_file=@factor.factors.out dir factor_dir disp ".factors.out" parent cat_factor_data class_level factor

major table path file factor_marker_factors_out_file=@factor.marker_factors.out dir factor_dir disp ".marker_factors.out" parent cat_factor_data class_level factor

table path file factor_gene_factors_out_file=@factor.gene_factors.out dir factor_dir disp ".gene_factors.out" parent cat_factor_data class_level factor

table path file factor_gene_set_factors_out_file=@factor.gene_set_factors.out dir factor_dir disp ".gene_set_factors.out" parent cat_factor_data class_level factor

major table path file factor_gene_clusters_out_file=@factor.gene_clusters.out dir factor_dir disp ".gene_clusters.out" parent cat_factor_data class_level factor

major table path file factor_gene_set_clusters_out_file=@factor.gene_set_clusters.out dir factor_dir disp ".gene_set_clusters.out" parent cat_factor_data class_level factor

!!expand:pdf:pdf:html! \
major path file factor_graph_pdf_file=@factor.graph.pdf dir factor_dir disp ".graph.pdf" parent cat_factor_data class_level factor

minor table path file factor_phewas_log_file=@factor_phewas.phewas.log dir factor_phewas_dir disp ".phewas.log" parent cat_factor_phewas_data class_level factor_phewas

major table path file factor_phewas_out_file=@factor_phewas.phewas.out dir factor_phewas_dir disp ".phewas.out" parent cat_factor_phewas_data class_level factor_phewas

table path file factor_phewas_provenance_out_file=@factor_phewas.phewas.provenance.out dir factor_phewas_dir disp ".phewas.provenance.out" parent cat_factor_phewas_data class_level factor_phewas

major table path file factor_phewas_parsed_out_file=@factor_phewas.phewas.parsed.out dir factor_phewas_dir disp ".phewas.parsed.out" parent cat_factor_phewas_data class_level factor_phewas

major table path file factor_phewas_clean_binary_parsed_out_file=@factor_phewas.phewas_clean_binary.parsed.out dir factor_phewas_dir disp ".phewas_clean_binary.parsed.out" parent cat_factor_phewas_data class_level factor_phewas

major path file factor_phewas_pdf_file=@factor_phewas.phewas.pdf dir factor_phewas_dir disp ".phewas.pdf" parent cat_factor_phewas_data class_level factor_phewas

#!!expand:noscale:noscale:traitscale! \
major path file factor_phewas_noscale_heatmap_pdf_file=@factor_phewas.phewas.noscale.heatmap.pdf dir factor_phewas_dir disp ".phewas.noscale.heatmap.pdf" parent cat_factor_phewas_data class_level factor_phewas

major path file factor_phewas_clean_binary_pdf_file=@factor_phewas.phewas_clean_binary.pdf dir factor_phewas_dir disp ".phewas_clean_binary.pdf" parent cat_factor_phewas_data class_level factor_phewas

#!!expand:noscale:noscale:traitscale! \
major path file factor_phewas_clean_binary_noscale_heatmap_pdf_file=@factor_phewas.phewas_clean_binary.noscale.heatmap.pdf dir factor_phewas_dir disp ".phewas_clean_binary.noscale.heatmap.pdf" parent cat_factor_phewas_data class_level factor_phewas

minor table path file result_x_mat_out_file=@result.X.out dir result_dir disp ".X.out" parent cat_result_data class_level result

major table path file result_priors_out_file=@result.priors.out dir result_dir disp ".priors.out" parent cat_result_data class_level result

major table path file result_params_out_file=@result.params.out dir result_dir disp ".params.out" parent cat_result_data class_level result

#!!expand:result:result:trait:project! \
#minor table path file result_sigma_transposed_out_file=@result.sigma.transposed.out dir result_dir disp ".sigma.transposed.out" parent cat_result_data class_level result

!!expand:,:exomes,dir_to_use,result:exomes,result_dir,result:gwas_genes,result_dir,result:exomes,magma_dir,magma:exomes_combined,result_dir,result:exomes_combined_priors,result_dir,result! \
table path file result_exomes_enrichment_txt_file=@result.exomes_enrichment.txt dir dir_to_use disp ".exomes_enrichment.txt" parent cat_result_data class_level result

!!expand:,:exomes,dir_to_use,result:exomes,result_dir,result:gwas_genes,result_dir,result:exomes,magma_dir,magma:exomes_combined,result_dir,result:exomes_combined_priors,result_dir,result! \
table path file result_exomes_enrichment_parsed_txt_file=@result.exomes_enrichment.parsed.txt dir dir_to_use disp ".exomes_enrichment.parsed.txt" parent cat_result_data class_level result

major table path file result_enrichment_parsed_txt_file=@result.enrichment.parsed.txt dir result_dir disp ".enrichment.parsed.txt" parent cat_result_data class_level result

!!expand:,:exomes,dir_to_use,result:exomes,magma_dir,magma:exomes_combined,result_dir,result:exomes_combined_priors,result_dir,result:exomes,result_dir,result:gwas_genes,result_dir,result! \
major path file result_exomes_enrichment_pdf_file=@result.exomes_enrichment.pdf dir dir_to_use disp ".exomes_enrichment.pdf" parent cat_result_data class_level result

!!expand:gene:gene:gene_set! \
major path file result_gene_size_pdf_file=@result.gene_size.pdf dir result_dir disp ".gene_size.pdf" parent cat_result_data class_level result

!!expand:gene:gene:gene_set! \
major path file result_priors_gene_size_pdf_file=@result.priors.gene_size.pdf dir result_dir disp ".priors.gene_size.pdf" parent cat_result_data class_level result

major path file result_gene_sim_comp_pdf_file=@result.gene_sim_comp.pdf dir result_dir disp ".gene_sim_comp.pdf" parent cat_result_data class_level result

major path file result_gene_log_bf_sim_comp_pdf_file=@result.gene_log_bf_sim_comp.pdf dir result_dir disp ".gene_log_bf_sim_comp.pdf" parent cat_result_data class_level result

major path file result_gene_set_sim_venn_pdf_file=@result.gene_set_sim_venn.pdf dir result_dir disp ".gene_set_sim_venn.pdf" parent cat_result_data class_level result

major path file result_gene_set_sim_comp_pdf_file=@result.gene_set_sim_comp.pdf dir result_dir disp ".gene_set_sim_comp.pdf" parent cat_result_data class_level result

major path file result_gene_comp_pdf_file=@result.gene_comp.pdf dir result_dir disp ".gene_comp.pdf" parent cat_result_data class_level result

major path file result_gene_set_comp_pdf_file=@result.gene_sets_comp.pdf dir result_dir disp ".gene_sets_comp.pdf" parent cat_result_data class_level result

path file result_known_gene_comp_pdf_file=@result.known_gene_comp.pdf dir result_dir disp ".known_gene_comp.pdf" parent cat_result_data class_level result

path file result_known_gene_sets_comp_pdf_file=@result.known_gene_sets_comp.pdf dir result_dir disp ".known_gene_sets_comp.pdf" parent cat_result_data class_level result

!!expand:gene:gene:gene_set! \
meta_table file path result_interesting_genes_meta_file=@result.interesting_genes.meta dir result_dir disp ".interesting_genes.meta" parent cat_result_data class_level result  meta_level gene_inspection

!!expand:result_rep:result_rep:result_chrom! \
meta_table file path result_result_reps_meta_file=@result.result_reps.meta dir result_dir disp ".result_reps.meta" parent cat_result_data class_level result meta_level result_rep

!!expand:gene:gene:gene_set! \
minor table file path paper_result_gene_stats_out_file=@paper_result.gene_stats.out dir paper_result_dir disp ".gene_stats.out" parent cat_paper_result_data class_level paper_result

!!expand:paper_result:paper_result:paper_project! \
!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
file path paper_result_gene_prior_hist_pdf_file=@paper_result.gene.prior.hist.pdf dir paper_result_dir disp ".gene.prior.hist.pdf" parent cat_paper_result_data class_level paper_result

!!expand:paper_result:paper_result:paper_project! \
!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
table file path paper_result_gene_prior_percentile_txt_file=@paper_result.gene.prior.percentile.txt dir paper_result_dir disp ".gene.prior.percentile.txt" parent cat_paper_result_data class_level paper_result

!!expand:paper_result:paper_result:paper_project! \
!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
file path paper_result_gene_prior_percentile_pdf_file=@paper_result.gene.prior.percentile.pdf dir paper_result_dir disp ".gene.prior.percentile.pdf" parent cat_paper_result_data class_level paper_result

major table path file gene_inspection_gene_set_stats_file=@gene_inspection.gene_set_stats.txt dir gene_inspections_dir disp ".gene_set_stats.txt" parent cat_gene_inspection_data class_level gene_inspection

major path file gene_inspection_beta_comparison_pdf_file=@gene_inspection.beta_comparison.pdf dir gene_inspections_dir disp ".gene_beta_comparison.pdf" parent cat_gene_inspection_data class_level gene_inspection

major table path file gene_set_inspection_gene_set_stats_file=@gene_set_inspection.gene_set_stats.txt dir gene_set_inspections_dir disp ".gene_set_stats.txt" parent cat_gene_set_inspection_data class_level gene_set_inspection

major path file gene_set_inspection_gene_bf_comparison_pdf_file=@gene_set_inspection.gene_bf_comparison.pdf dir gene_set_inspections_dir disp ".gene_bf_comparison.pdf" parent cat_gene_set_inspection_data class_level gene_set_inspection

!!expand:gene_set:gene_set:gene! \
table path file gene_set_inspection_trace_out_gz_file=@gene_set_inspection.trace.out.gz dir gene_set_inspections_dir disp ".trace.out.gz" parent cat_gene_set_inspection_data class_level gene_set_inspection

!!expand:,:gene_set,beta:gene_set,beta:gene_set,beta_tilde:gene_set,postp:gene,prior! \
major path file gene_set_inspection_beta_trace_pdf_file=@gene_set_inspection.beta.trace.pdf dir gene_set_inspections_dir disp ".beta.trace.pdf" parent cat_gene_set_inspection_data class_level gene_set_inspection


#FILES
#====================


#====================
#COMMANDS

#define commands via the cmd prefix
#prefix short says run on cluster with 2:00 default run time with flag --bsub; can also do local (never run on cluster, useful for very short commands) and long (default to 8:00 run time)
#if jobs run out of time or memory on the cluster, they will be auto-restarted with double the time (or memory)
#postfix class_level says run this for every tissue instance. It will expand all !{} objects based on the specific instance it is running for
#the key is the name of the command (you can use this to control what is run on the command line)
#the value is the text to be run
#!{type:flag?:class_level?:key:prop1=value1:prop2=value2...:propN=valueN} expands and is how you control inputs/outputs/instance specific behavior
#you do not need to use a : as a separator; any character will work
#!{input::file_key} says expand this to a file name (or set of files if the file_key is at a descendent class), treat it as an input (run this command whenever that input is newer than the outputs). Use !{input:-flag:file_key} if you want to put a -flag in front of every expansion. file_key can have any class_level you want; it will expand as many times as necessary based on the instance tree
#!{output;;file_key} says expand this to a file name(s), treat it as an output (run if output is missing or older than an input). Note the use of ; here rather than : since delimiters are arbitrary

prop project_initial_geneloc_file=scalar
prop project_initial_exons_geneloc_file=scalar
prop project_initial_huge_geneloc_file=scalar
prop project_gene_map_file=scalar
prop project_gencode_map_file=scalar


local cmd make_project_geneloc_file=cat !{prop::project:project_initial_geneloc_file} | awk -F"\t" -v OFS="\t" '{\$1=\$NF} {print}' > !{output::project_geneloc_file} class_level project

local cmd make_project_pops_geneloc_file=sed 's/\s\s*/\t/g' !{prop::project:project_gencode_map_file} | cat - !{input::project_geneloc_file} | awk -F"\t" -v OFS="\t" 'NF == 2 {m[\$1]=\$2} NF > 2 && m[\$1] {\$1=m[\$1]; print}' > !{output::project_pops_geneloc_file} class_level project

local cmd make_project_pops_gene_annot_file=cat !{input::project_pops_geneloc_file} | awk -F"\t" -v OFS="\t" 'BEGIN {print "ENSGID","NAME","CHR","START","END","TSS"} {print \$1,\$6,\$2,\$3,\$4,\$3}' > !{output::project_pops_gene_annot_file} class_level project

#simulate data for this trait
prop gene_set_var_exp=scalar

local cmd make_trait_known_betas_file=$generate_effect_ranges_cmd !{input:--gene-gene-set-file:trait_simulate_gene_x_gene_sets_file} !{output:--out-gene-set-betas:trait_known_gene_set_betas_file} !{output:--out-gene-bfs:trait_known_gene_betas_file} !{prop:--gene-set-var-exp:trait:gene_set_var_exp} class_level trait run_if trait_simulate_gene_x_gene_sets_file

prop trait_chrom_pos_sumstats_url=scalar

prop trait_sumstats_snp_col=scalar
prop trait_sumstats_p_col=scalar
prop trait_sumstats_n_col=scalar
prop trait_sumstats_beta_col=scalar
prop trait_sumstats_se_col=scalar
prop trait_sumstats_chrom_col=scalar
prop trait_sumstats_pos_col=scalar

prop trait_sumstats_filter_col=scalar
prop trait_sumstats_filter_value=scalar

prop trait_exomes_gene_col=scalar default Gene
prop trait_exomes_p_col=scalar default P-value
prop trait_exomes_beta_col=scalar default Effect
prop trait_exomes_se_col=scalar

prop trait_positive_controls_id_col=scalar default Gene
prop trait_positive_controls_prob_col=scalar default Prob


cmd_class ps2pdf_cmd_class=ps2pdf env_mod TEMP:$tmp_dir use_mod Ghostscript-9.10
cmd_class pdftops_cmd_class=pdftops use_mod Ghostscript-9.10
chrom_pos_mem=9000

short cmd make_trait_chrom_pos_sumstats_file=zcat !{input::trait_sumstats_file} | sed 's/^/DATA\t/' | $smart_cut_cmd !{prop:--file:project:project_bfile}.bim --out-delim $'\t' --select-col 0,1,'DATA !{prop::trait:trait_sumstats_snp_col} !{prop::trait:trait_sumstats_p_col} !{prop::trait:trait_sumstats_n_col:if_prop=trait_sumstats_n_col:allow_empty=1} !{prop::trait:trait_sumstats_se_col:if_prop=trait_sumstats_se_col:allow_empty=1}' --exact --require-col-match | awk -v OFS="\t" '\$1 != "DATA" {c[\$2]=\$1; p[\$2]=\$4} \$1 == "DATA" && c[\$2] {print \$2,c[\$2],p[\$2],\$3,\$4}' | sed '1 s/^/!{prop::trait:trait_sumstats_snp_col}\t!{prop::trait:trait_sumstats_chrom_col}\t!{prop::trait:trait_sumstats_pos_col}\t!{prop::trait:trait_sumstats_p_col}\t!{prop::trait:trait_sumstats_n_col:if_prop=trait_sumstats_n_col:allow_empty=1}\t!{prop::trait:trait_sumstats_se_col:if_prop=trait_sumstats_se_col:allow_empty=1}\n/' | gzip > !{output::trait_chrom_pos_sumstats_file} class_level trait run_if and,project_bfile,trait_sumstats_file rusage_mod $chrom_pos_mem

short cmd make_trait_snploc_file=zcat !{input::trait_chrom_pos_sumstats_file} | tail -n+2 | cut -f1-3 > !{output::trait_snploc_file} class_level trait run_if !trait_chrom_pos_sumstats_file

short cmd make_trait_chrom_pos_snploc_file=$smart_cut_cmd --tab-delim --exec "zcat !{input::trait_chrom_pos_sumstats_file} | sed 's/^/DATA\t/'" !{prop:--file:project:project_bfile}.bim --exec "zcat !{input::trait_chrom_pos_sumstats_file}" --select-col 1,1,'DATA !{prop::trait:trait_sumstats_chrom_col} !{prop::trait:trait_sumstats_pos_col}' --select-col 3,1,'!{prop::trait:trait_sumstats_chrom_col} !{prop::trait:trait_sumstats_pos_col}' --exclude-row 1,1 --exclude-row 3,1 --exact --require-col-match | awk -F"\t" -v OFS="\t" '{if (\$1 == "DATA") {m[\$2":"\$3]=1} else if (NF > 2 && m[\$1":"\$4]) {m2[\$1":"\$4]=\$2} else if (m2[\$1":"\$2]) {print m2[\$1":"\$2],\$1,\$2}}' > !{output::trait_snploc_file} class_level trait run_if trait_chrom_pos_sumstats_file

#below works locally but not on cluster for some reason
#short cmd make_trait_snploc_file=$smart_join_cmd --exec "zcat !{input::trait_sumstats_file} | $smart_cut_cmd --tab-delim --select-col 0,1,'!{prop::trait:trait_sumstats_snp_col}'" --exec "$smart_cut_cmd !{prop:--file:project:project_bfile}.bim --select-col 1,'2 1 4'" --multiple 1 --extra 2 --fill 2 --fill-value NA | awk '\$2 != "NA"' > !{output::trait_snploc_file} class_level trait

local cmd make_sim_trait_gwas_genes_file=awk -F"\t" -v OFS="\t" 'NR > 1 {\$2=-\$2} {print \$1,\$2}' !{input::trait_known_gene_betas_file} > !{output::trait_gwas_genes_file} class_level trait run_if trait_simulate_gene_x_gene_sets_file

local cmd make_trait_pval_file=zcat !{input::trait_sumstats_file} | $smart_cut_cmd --tab-delim --select-col 0,1,'!{prop::trait:trait_sumstats_snp_col} !{prop::trait:trait_sumstats_p_col} !{prop::trait:trait_sumstats_n_col}' --exact --require-col-match | sed '1 s/.*/SNP\tP\tN/' > !{output::trait_pval_file} class_level trait run_if and,trait_sumstats_file,trait_sumstats_n_col

cmd make_trait_chrom_pos_pval_file=$smart_cut_cmd --tab-delim --exec "zcat !{input::trait_chrom_pos_sumstats_file} | sed 's/^/DATA\t/'" !{prop:--file:project:project_bfile}.bim --exec "zcat !{input::trait_chrom_pos_sumstats_file} | sed 's/^/DATA2\t/'" --select-col 1,1,'DATA !{prop::trait:trait_sumstats_chrom_col} !{prop::trait:trait_sumstats_pos_col}' --select-col 3,1,'!{prop::trait:trait_sumstats_chrom_col} !{prop::trait:trait_sumstats_pos_col} !{prop::trait:trait_sumstats_p_col} !{prop::trait:trait_sumstats_n_col}' --exclude-row 1,1 --exclude-row 3,1 --exact --require-col-match | awk -F"\t" -v OFS="\t" '{if (\$1 == "DATA") {m[\$2":"\$3]=1} else if (\$1 != "DATA2" && m[\$1":"\$4]) {m2[\$1":"\$4]=\$2} else if (m2[\$1":"\$2]) {print m2[\$1":"\$2],\$3,\$4}}' | sed '1 s/.*/SNP\tP\tN/' > !{output::trait_pval_file} class_level trait run_if and,trait_chrom_pos_sumstats_file,!trait_sumstats_file,trait_sumstats_n_col



prop annot_window=scalar

!!expand:,:magma_annot,project_geneloc_file:magma_annot,project_geneloc_file:magma_pops_annot,project_pops_geneloc_file! \
short cmd make_magma_annot_file=$magma_cmd --annotate !{prop:window=:magma:annot_window} !{input:--snp-loc:trait_snploc_file} !{input:--gene-loc:project_geneloc_file} !{raw:--out:magma:*magma_annot_trunk} !{output:magma_annot_file} class_level magma

prop project_bfile=scalar
prop project_syn_file=scalar


!!expand:,:magma_annot,magma_genes,magma_log:magma_annot,magma_genes,magma_log:magma_pops_annot,magma_pops_genes,magma_pops_log! \
short cmd make_magma_genes_out_file=$magma_cmd !{prop:--bfile:project:project_bfile} !{prop:synonyms=:project:project_syn_file} !{input:--gene-annot:magma_annot_file} !{input:--pval:trait_pval_file} ncol=N !{raw:--out:magma:*magma_annot_trunk} !{output:magma_genes_out_file} !{output:magma_genes_raw_file} !{output:magma_log_file} class_level magma

#short cmd make_magma_pops_genes_out_file=$magma_cmd !{prop:--bfile:project:project_bfile} !{prop:synonyms=:project:project_syn_file} !{input:--gene-annot:magma_pops_annot_file} !{input:--pval:trait_pval_file} ncol=N !{raw:--out:magma:*magma_pops_annot_trunk} !{output:magma_pops_genes_out_file} !{output:magma_pops_genes_raw_file} !{output:magma_pops_log_file} class_level magma run_if trait_sumstats_n_col

short cmd make_magma_gsa_out_file=$magma_cmd !{input:--gene-results:magma_genes_raw_file} !{input;--set-annot;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;unless_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1} !{raw:--out:magma_gsa:*magma_gsa_trunk} !{output:magma_gsa_out_file} !{output:magma_gsa_set_genes_out_file} !{output:magma_gsa_log_file} class_level magma_gsa

prop depict_background_plink_clumping_pvalue=scalar default 0.0005

depict_mem=16000

local cmd make_depict_cfg_file=(echo && echo [PATHS] && echo && \
echo analysis_path: !{raw::depict:$depict_dir} && \
echo && echo [GWAS FILE SETTINGS] && echo && \
echo gwas_summary_statistics_file: !{input::trait_chrom_pos_sumstats_file} && \
echo association_pvalue_cutoff:  5e-8  && \
echo label_for_output_files: !{raw::depict:$depict_annot_trunk} && \
echo pvalue_col_name: !{prop::trait:trait_sumstats_p_col} && \
echo marker_col_name: && \
echo chr_col_name: !{prop::trait:trait_sumstats_chrom_col} && \
echo pos_col_name: !{prop::trait:trait_sumstats_pos_col} && \
echo separator: tab && \
echo && echo [PLINK SETTINGS] && echo &&\
echo plink_executable: /home/unix/flannick/links/targeted/lib/plink_1.09 && \
echo genotype_data_plink_prefix: !{prop::project:project_bfile} && \
echo plink_clumping_snp_column_header: SNP && \
echo association_pvalue_cutoff_column_header: P && \
echo plink_clumping_distance: 500 && \
echo plink_clumping_r2: 0.1 && \
echo && echo [DEPICT SETTINGS] && echo &&\ 
echo step_construct_depict_loci: yes && \
echo step_depict_geneprio: yes && \
echo step_depict_gsea: yes && \
echo step_depict_tissueenrichment: yes && \
echo && echo [MISC SETTINGS] && echo &&\
echo number_of_threads: 11 && \
echo heap_size_in_mb: $depict_mem && \
echo collection_file: data/collections/ld0.5_collection_1000genomespilot_depict_150429.txt.gz && \
echo reconstituted_genesets_file: data/reconstituted_genesets/reconstituted_genesets_150901.binary && \
echo tissue_expression_file: data/tissue_expression/GPL570EnsemblGeneExpressionPerTissue_DEPICT20130820_z_withmeshheader.txt && \
echo tissue_mapping_file: data/tissue_expression/GPL570EnsemblGeneExpressionPerTissue_DEPICT20130820_z_withmeshheader_mapping.txt && \
echo depict_gene_annotation_file: data/mapping_and_annotation_files/GPL570ProbeENSGInfo+HGNC_reformatted.txt && \
echo max_top_genes_for_gene_set: 10 && \
echo nr_repititions: 50 && \
echo nr_permutations: 500 && \
echo mhc_start_bp: 25000000 && \
echo mhc_end_bp: 35000000 && \
echo background_data_path: data/backgrounds && \
echo go_mapping_file: data/mapping_and_annotation_files/GO.terms_alt_ids_withoutheader.tab && \
echo mgi_mapping_file: data/mapping_and_annotation_files/VOC_MammalianPhenotype.rpt && \
echo inweb_mapping_file: data/mapping_and_annotation_files/inweb_mapping.tab && \
echo eqtl_mapping_file: data/mapping_and_annotation_files/2012-08-08-IlluminaAll96PercentIdentity-ProbeAnnotation-ProbesWithWrongMappingLengthFilteredOut-EnsemblAnnotation.txt && \
echo eqtl_file: data/mapping_and_annotation_files/eQTLProbesFDR0.05.txt && \
echo prioritize_genes_outside_input_loci: no && \
echo leave_out_chr:  && \
echo number_random_runs: 500 && \
echo background_plink_clumping_pvalue: !{prop::trait:depict_background_plink_clumping_pvalue} && \
echo export_cofunc_and_exit: no && \
echo export_cofunc_type: binary && \
echo export_cofunc_label: my_new_depict_cofunc && \
echo req_fraction_of_background_files: 0.9) > !{output::depict_cfg_file} class_level depict

cmd make_depict_files=source $useuse_script && python=`use | fgrep Python`; unuse \$python && source activate depict && $depict_cmd !{input::depict_cfg_file} !{output:depict_loci_file} !{output:depict_geneprioritization_file} !{output:depict_genesetenrichment_file} !{output:depict_tissueenrichment_file} class_level depict rusage_mod $depict_mem use_mod Java-1.8

prop pops_control_features_file=scalar


prop pops_max_cols=scalar default 50

short cmd make_pops_features=rm -f !{raw::gene_set_list:*gene_set_list_feature_trunk}.cols.*.txt && rm -f !{raw::gene_set_list:*gene_set_list_feature_trunk}.mat.*.npy && $pops_munge_cmd !{input:--gene_annot_path:project_pops_gene_annot_file} !{input;--feature_list;gene_set_list_file} !{raw:--save_prefix:gene_set_list:*gene_set_list_feature_trunk} !{output:gene_set_list_feature_rows_file} --nan_policy mean !{prop:--max_cols:project:pops_max_cols} class_level gene_set_list run_if and,is_dense,is_list_of_lists

pops_mem=4000
prop pops_p_cutoff=scalar

cmd make_pops_files=$pops_cmd !{input:--gene_annot_path:project_pops_gene_annot_file} !{raw;--feature_mat_prefix;gene_set_list;*gene_set_list_feature_trunk;if_prop=gene_set_list:eq:@gene_set_lists;if_prop=is_dense;if_prop=is_list_of_lists} !{input;gene_set_list_feature_rows_file;if_prop=gene_set_list:eq:@gene_set_lists;if_prop=is_dense;if_prop=is_list_of_lists;instance_level=gene_set_list} --num_feature_chunks `ls -1 !{raw;;gene_set_list;*gene_set_list_feature_trunk.cols.*.txt;if_prop=gene_set_list:eq:@gene_set_lists;if_prop=is_dense;if_prop=is_list_of_lists} | wc -l` !{raw:--magma_prefix:magma:*magma_pops_annot_trunk} !{input:magma_pops_genes_raw_file} !{input:magma_pops_genes_out_file} !{prop:--control_features_path:pops:pops_control_features_file} !{raw:--out_prefix:pops:*pops_annot_trunk} !{output:pops_coefs_file} !{output:pops_marginals_file} !{output:pops_preds_file} --verbose !{prop:--feature_selection_p_cutoff:pops:pops_p_cutoff:if_prop=pops_p_cutoff:allow_empty=1} >& !{output::pops_log_file} class_level pops rusage_mod $pops_mem

local cmd make_pops_mapped_preds_file=sed 's/\s\s*/\t/g' !{prop::project:project_gencode_map_file} | cat - !{input::pops_preds_file} | awk -F"\t" -v OFS="\t" 'NF == 2 {m[\$2]=\$1} NF > 2 {if (m[\$1]) {\$1=m[\$1]} print}' > !{output::pops_mapped_preds_file} class_level pops

local cmd make_gene_bf_genes_bf_file=ln -s !{input;;trait_known_gene_betas_file} !{output::gene_bf_genes_bf_file} class_level gene_bf run_if trait_simulate_gene_x_gene_sets_file

#Vary: (a) 25/50 or 25/50/100/500/1000 (b) positive/negative vs. ext (c) two replicates (d) shared p/sigma or not (e) num chains (f) num its

prop beta_tilde_strategy=scalar default huge

prop sigma2=scalar
prop sigma2_ext=scalar
prop sigma2_cond=scalar
prop top_gene_set_prior=scalar
prop top_gene_set_prior_sim=scalar
prop num_gene_sets_for_prior=scalar
prop frac_gene_sets_for_prior=scalar
prop p_noninf=scalar
prop p_noninf_sim=scalar
prop sigma_power_sim=scalar
prop sigma_power=scalar
prop do_naive_priors=scalar
prop sim_log_bf_noise_sigma_mult=scalar default 0
prop sigma_num_devs_to_top=scalar
prop sigma_soft_threshold_95=scalar
prop sigma_soft_threshold_5=scalar
prop max_gene_set_size=scalar
prop p_noninf_inflate=scalar
prop background_prior=scalar
prop permute_gene_sets=scalar
prop update_hyper=scalar

prop filter_gene_set_p=scalar
prop prune_gene_sets=scalar
prop max_num_gene_sets=scalar default 5000
prop x_sparsify=list
prop use_ext=scalar
prop batch_all_for_hyper=scalar
prop first_max_p_for_hyper=scalar
prop first_for_hyper=scalar
prop first_for_sigma_cond=scalar
prop min_var_posterior=scalar
prop detect_high_power=scalar default 100
prop detect_low_power=scalar default 10
prop detect_no_adjust_huge=scalar
prop increase_hyper_if_betas_below=scalar
prop min_n_ratio=scalar

#parameters for sampling
prop num_chains=scalar default 10
prop num_chains_betas=scalar default 4
prop max_num_iter=scalar default 500
prop min_num_iter=scalar

prop extra_flags=scalar

#for huge
prop add_exomes=scalar 
prop only_exomes=scalar
prop add_positive_controls=scalar
prop only_positive_controls=scalar

#for magma_rank
prop magma_to_use=scalar
prop top_posterior=scalar default 0.99
prop gene_percentiles_id_col=scalar default GENE
prop gene_percentiles_value_col=scalar default P
prop gene_percentiles_higher_is_better=scalar

#for magma_z
prop magma_to_use=scalar
prop read_correlations=scalar
prop gws_prob_true=scalar default 0.95
prop max_mean_posterior=scalar default 0.2
prop gws_threshold=scalar default 2.5e-6
prop gene_zs_id_col=scalar default GENE
prop gene_zs_value_col=scalar default ZSTAT

#for gene_bf
prop gene_bf_to_use=scalar
prop gene_bfs_id_col=scalar default Gene
rop gene_bfs_bf_col=scalar default BF
prop gene_bfs_log_bf_col=scalar default log_bf

prop chrom=scalar

local cmd make_magma_result_in_file=ln -s !{input;;magma_genes_out_file;if_prop=magma:eq:@magma_to_use} !{output::result_in_file} class_level result run_if and,(or,beta_tilde_strategy:eq:magma_rank,beta_tilde_strategy:eq:magma_z,beta_tilde_strategy:eq:pops),!trait_simulate_gene_x_gene_sets_file

local cmd make_magma_result_cor_file=ln -s !{input;;magma_genes_raw_file;if_prop=magma:eq:@magma_to_use} !{output::result_cor_file} class_level result run_if and,(or,beta_tilde_strategy:eq:magma_rank,beta_tilde_strategy:eq:magma_z,beta_tilde_strategy:eq:pops),magma_to_use,!trait_simulate_gene_x_gene_sets_file

local cmd make_dummy_magma_genes_out_file=$smart_join_cmd --exec "sed '1 s/.*/!{prop::result:gene_percentiles_id_col}\t!{prop::result:gene_percentiles_value_col}/' !{input::trait_gwas_genes_file}" --exec "cut -f1-2 !{input::project_geneloc_file} | sed '1 s/^/!{prop::result:gene_percentiles_id_col}\tCHR\n/'" --header 1 --extra 2 --fill 2 | awk -v OFS="\t" -F"\t" '\$3 != "NA"' > !{output::result_in_file} class_level result run_if and,beta_tilde_strategy:eq:magma_rank,trait_simulate_gene_x_gene_sets_file

local cmd make_gene_bf_result_in_file=ln -s !{input;;gene_bf_genes_bf_file;if_prop=gene_bf:eq:@gene_bf_to_use} !{output::result_in_file} class_level result run_if beta_tilde_strategy:eq:gene_bf

prop gene_set_lists=list

prop credible_sets_in=scalar
prop credible_sets_id_col=scalar
prop credible_sets_chrom_col=scalar
prop credible_sets_pos_col=scalar
prop credible_sets_ppa_col=scalar

result_calc_core_cmd=$calc_cmd @1 !{input;--X-in;gene_set_list_file;if_prop=gene_set_list:eq:\@gene_set_lists;unless_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1} !{input;--Xd-in;gene_set_list_file;if_prop=gene_set_list:eq:\@gene_set_lists;if_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1} !{input;--X-list;gene_set_list_file;if_prop=gene_set_list:eq:\@gene_set_lists;unless_prop=is_dense;if_prop=is_list_of_lists;allow_empty=1} !{input;--Xd-list;gene_set_list_file;if_prop=gene_set_list:eq:\@gene_set_lists;if_prop=is_dense;if_prop=is_list_of_lists;allow_empty=1} !{prop:--gene-map-in:result:project_gene_map_file:allow_empty=1} !{prop:--background-prior:result:background_prior:if_prop=background_prior:allow_empty=1} !{prop:--filter-gene-set-p:result:filter_gene_set_p:if_prop=filter_gene_set_p:allow_empty=1} !{prop:--prune-gene-sets:result:prune_gene_sets:if_prop=prune_gene_sets:allow_empty=1} !{prop:--max-num-gene-sets:result:max_num_gene_sets:if_prop=max_num_gene_sets:allow_empty=1} !{prop:--sigma2:result:sigma2:if_prop=sigma2:allow_empty=1} !{prop:--sigma2-ext:result:sigma2_ext:if_prop=sigma2_ext:allow_empty=1} !{prop:--sigma2-cond:result:sigma2_cond:if_prop=sigma2_cond:allow_empty=1} !{prop:--top-gene-set-prior:result:top_gene_set_prior:if_prop=top_gene_set_prior:allow_empty=1} !{prop:--credible-sets-in:result:credible_sets_in:if_prop=credible_sets_in:allow_empty=1} !{prop:--credible-sets-id-col:result:credible_sets_id_col:if_prop=credible_sets_id_col:allow_empty=1} !{prop:--credible-sets-chrom-col:result:credible_sets_chrom_col:if_prop=credible_sets_chrom_col:allow_empty=1} !{prop:--credible-sets-pos-col:result:credible_sets_pos_col:if_prop=credible_sets_pos_col:allow_empty=1} !{prop:--credible-sets-ppa-col:result:credible_sets_ppa_col:if_prop=credible_sets_ppa_col:allow_empty=1} !{prop:--num-gene-sets-for-prior:result:num_gene_sets_for_prior:if_prop=num_gene_sets_for_prior:allow_empty=1} !{prop:--frac-gene-sets-for-prior:result:frac_gene_sets_for_prior:if_prop=frac_gene_sets_for_prior:allow_empty=1} !{prop:--p-noninf:result:p_noninf:if_prop=p_noninf:allow_empty=1} !{prop;--sigma-power;result;sigma_power;if_prop=sigma_power:defined;allow_empty=1} !{prop;--sigma-num-devs-to-top;result;sigma_num_devs_to_top;if_prop=sigma_num_devs_to_top:defined;allow_empty=1} !{prop;--sigma-soft-threshold-95;result;sigma_soft_threshold_95;if_prop=sigma_soft_threshold_95;allow_empty=1} !{prop;--sigma-soft-threshold-5;result;sigma_soft_threshold_5;if_prop=sigma_soft_threshold_5;allow_empty=1} !{prop;--max-gene-set-size;result;max_gene_set_size;if_prop=max_gene_set_size;allow_empty=1} !{prop;--p-noninf-inflate;result;p_noninf_inflate;if_prop=p_noninf_inflate:defined;allow_empty=1} !{prop:--update-hyper:result:update_hyper:if_prop=update_hyper:allow_empty=1} !{prop:--x-sparsify:result:x_sparsify:if_prop=x_sparsify:allow_empty=1:sep=,} !{raw::result:--no-add-bottom --no-add-top --add-ext:if_prop=use_ext:allow_empty=1} !{raw::result:--batch-all-for-hyper:if_prop=batch_all_for_hyper:allow_empty=1} !{raw::result:--first-for-hyper:if_prop=first_for_hyper:unless_prop=first_for_sigma_cond:unless_prop=batch_all_for_hyper:allow_empty=1} !{raw::result:--first-max-p-for-hyper:if_prop=first_max_p_for_hyper:allow_empty=1} !{raw::result:--first-for-sigma-cond:if_prop=first_for_sigma_cond:unless_prop=batch_all_for_hyper:allow_empty=1} !{prop:--gwas-detect-high-power:result:detect_high_power:if_prop=detect_high_power:allow_empty=1} !{prop:--gwas-detect-low-power:result:detect_low_power:if_prop=detect_low_power:allow_empty=1} !{raw:--gwas-detect-no-adjust-huge:result::if_prop=detect_no_adjust_huge:allow_empty=1} !{prop:--min-var-posterior:result:min_var_posterior:if_prop=min_var_posterior:allow_empty=1} !{prop;--min-n-ratio;result;min_n_ratio;if_prop=min_n_ratio:defined;allow_empty=1} !{prop:--increase-hyper-if-betas-below:result:increase_hyper_if_betas_below:if_prop=increase_hyper_if_betas_below:allow_empty=1} !{prop:--num-chains:result:num_chains} !{prop:--num-chains-betas:result:num_chains_betas} !{prop:--max-num-iter:result:max_num_iter} !{prop:--min-num-iter:result:min_num_iter:if_prop=min_num_iter:allow_empty=1} !{raw::result:--permute-gene-sets --increase-filter-gene-set-p 0 --min-num-gene-sets 0:if_prop=permute_gene_sets:allow_empty=1} !{prop::result:extra_flags:if_prop=extra_flags:allow_empty=1} 

prop write_x=scalar
prop write_gene_set_stats_trace=scalar
prop write_gene_stats_trace=scalar
prop write_gene_set_overlap_stats=scalar

prop max_no_write_gene_set_beta_uncorrected=scalar

result_calc_output_cmd=$result_calc_core_cmd(@1) !{output:--gene-stats-out:result_gene_stats_out_file} !{prop;--max-no-write-gene-set-beta-uncorrected;result;max_no_write_gene_set_beta_uncorrected;if_prop=max_no_write_gene_set_beta_uncorrected:defined;allow_empty=1} !{output:--gene-set-stats-out:result_gene_set_stats_out_file} !{output:--gene-gene-set-stats-out:result_gene_gene_set_stats_out_file} !{output:--gene-set-overlap-stats-out:result_gene_set_overlap_stats_out_file:if_prop=write_gene_set_overlap_stats:allow_empty=1} !{output;--gene-effectors-out;result_gene_effectors_out_file;if_prop=beta_tilde_strategy:eq:huge;unless_prop=only_exomes;unless_prop=only_positive_controls;allow_empty=1} !{output:--gene-stats-trace-out:result_gene_stats_trace_out_gz_file:if_prop=write_gene_stats_trace:allow_empty=1} !{output:--gene-set-stats-trace-out:result_gene_set_stats_trace_out_gz_file:if_prop=write_gene_set_stats_trace:allow_empty=1} !{output:--X-out:result_x_mat_out_file:if_prop=write_x:allow_empty=1} !{output:--warnings-file:result_warnings_file}

result_rep_calc_output_cmd=$result_calc_core_cmd(@1) !{output:--gene-stats-out:result_rep_gene_stats_out_file} !{output:--gene-set-stats-out:result_rep_gene_set_stats_out_file} !{output:--gene-stats-trace-out:result_rep_gene_stats_trace_out_gz_file:if_prop=write_gene_stats_trace:allow_empty=1} !{output:--gene-set-stats-trace-out:result_rep_gene_set_stats_trace_out_gz_file:if_prop=write_gene_set_stats_trace:allow_empty=1} !{output:--warnings-file:result_rep_warnings_file} 

#!{output:--log-file:result_log_file}

prop result_s2g_file=scalar
prop s2g_chrom_col=scalar default Chrom
prop s2g_pos_col=scalar default Pos
prop s2g_gene_col=scalar default Gene
prop s2g_prob_col=scalar default Prob
prop s2g_normalize_values=scalar default 0.95

prop gene_loc_id_col=scalar default 1

!!expand:result_calc:result_calc_core:result_calc_output:result_rep_calc_output! \
result_calc_huge_cmd=$result_calc_cmd(@1) !{prop:--gwas-in:result:trait_chrom_pos_sumstats_url:unless_prop=only_exomes:unless_prop=only_positive_controls:if_prop=trait_chrom_pos_sumstats_url:allow_empty=1} !{input:--gwas-in:trait_chrom_pos_sumstats_file:unless_prop=only_exomes:unless_prop=only_positive_controls:unless_prop=trait_chrom_pos_sumstats_url:allow_empty=1} !{prop:--gwas-chrom-col:trait:trait_sumstats_chrom_col:if_prop=trait_sumstats_chrom_col:allow_empty=1} !{prop:--gwas-pos-col:trait:trait_sumstats_pos_col:if_prop=trait_sumstats_pos_col:allow_empty=1} !{prop:--gwas-p-col:trait:trait_sumstats_p_col:if_prop=trait_sumstats_p_col:allow_empty=1} !{prop:--gwas-n-col:trait:trait_sumstats_n_col:if_prop=trait_sumstats_n_col:allow_empty=1} !{prop:--gwas-se-col:trait:trait_sumstats_se_col:if_prop=trait_sumstats_se_col:allow_empty=1} !{prop:--gwas-beta-col:trait:trait_sumstats_beta_col:if_prop=trait_sumstats_beta_col:allow_empty=1} !{prop:--gwas-filter-col:trait:trait_sumstats_filter_col:if_prop=trait_sumstats_filter_col:allow_empty=1} !{prop;--gwas-filter-value;trait;trait_sumstats_filter_value;if_prop=trait_sumstats_filter_value:defined;allow_empty=1} !{prop:--gene-loc-file:result:project_initial_geneloc_file:allow_empty=1} !{input:--exomes-in:trait_exomes_file:if_prop=add_exomes:if_prop=only_exomes:or_if_prop=1:allow_empty=1} !{input:--positive-controls-in:trait_positive_controls_file:if_prop=add_positive_controls:if_prop=only_positive_controls:or_if_prop=1:allow_empty=1} !{prop:--positive-controls-all-in:result:project_initial_huge_geneloc_file:if_prop=only_positive_controls:allow_empty=1} !{prop:--positive-controls-all-id-col:result:gene_loc_id_col} !{raw:--ols:result::if_prop=only_positive_controls:allow_empty=1} !{prop:--exomes-gene-col:trait:trait_exomes_gene_col} !{prop:--exomes-p-col:trait:trait_exomes_p_col:if_prop=trait_exomes_p_col:allow_empty=1} !{prop:--exomes-beta-col:trait:trait_exomes_beta_col:if_prop=trait_exomes_beta_col:allow_empty=1} !{prop:--exomes-se-col:trait:trait_exomes_se_col:if_prop=trait_exomes_se_col:allow_empty=1} !{prop:--positive-controls-id-col:result:trait_positive_controls_id_col:if_prop=trait_positive_controls_id_col:if_prop=add_positive_controls:allow_empty=1} !{prop:--positive-controls-prob-col:result:trait_positive_controls_prob_col:if_prop=trait_positive_controls_prob_col:if_prop=add_positive_controls:allow_empty=1} !{prop:--gene-loc-file-huge:result:project_initial_huge_geneloc_file:missing_prop=project_initial_geneloc_file} !{prop:--exons-loc-file-huge:result:project_initial_exons_geneloc_file:if_prop=project_initial_exons_geneloc_file:allow_empty=1} !{prop:--s2g-in:result:result_s2g_file:if_prop=result_s2g_file:allow_empty=1} !{prop:--s2g-chrom-col:result:s2g_chrom_col:if_prop=result_s2g_file:allow_empty=1} !{prop:--s2g-pos-col:result:s2g_pos_col:if_prop=result_s2g_file:allow_empty=1} !{prop:--s2g-gene-col:result:s2g_gene_col:if_prop=result_s2g_file:allow_empty=1} !{prop:--s2g-prob-col:result:s2g_prob_col:if_prop=result_s2g_file:allow_empty=1} !{prop:--s2g-normalize-values:result:s2g_normalize_values:if_prop=s2g_normalize_values:allow_empty=1}

prop num_sim_rep=scalar default 50

!!expand:,:_result_,skipif:result,skip_if result_rep:result_rep,! \
cmd make__result__sim_output_files=rm -f !{output::_result__gene_set_stats_out_file} && rm -f !{output::_result__gene_stats_out_file} && rm -f !{output::_result__log_file} && gss_tmp_in=!{raw::_result_:*_result__gene_set_stats_out_file.in.tmp} && gs_tmp_in=!{raw::_result_:*_result__gene_stats_out_file.in.tmp} && gss_tmp_out=!{raw::_result_:*_result__gene_set_stats_out_file.out.tmp} && gs_tmp_out=!{raw::_result_:*_result__gene_stats_out_file.out.tmp} && (for ((i=0; i<!{prop::result:num_sim_rep}; i++)); do echo "Sim \$i" >>!{output::_result__log_file} 2>&1 && $calc_cmd sim --linear !{input;--X-in;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;unless_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1} !{input;--Xd-in;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;if_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1} !{input;--X-list;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;unless_prop=is_dense;if_prop=is_list_of_lists;allow_empty=1} !{input;--Xd-list;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;if_prop=is_dense;if_prop=is_list_of_lists;allow_empty=1} !{prop:--sigma2:result:sigma2:if_prop=sigma2:unless_prop=top_gene_set_prior:unless_prop=top_gene_set_prior_sim:unless_prop=sigma2_ext:allow_empty=1} !{prop:--sigma2-ext:result:sigma2_ext:if_prop=sigma2_ext:unless_prop=top_gene_set_prior:unless_prop=top_gene_set_prior_sim:allow_empty=1} !{prop:--top-gene-set-prior:result:top_gene_set_prior:if_prop=top_gene_set_prior:unless_prop=top_gene_set_prior_sim:allow_empty=1} !{prop:--top-gene-set-prior:result:top_gene_set_prior_sim:if_prop=top_gene_set_prior_sim:allow_empty=1} !{prop:--num-gene-sets-for-prior:result:num_gene_sets_for_prior:if_prop=num_gene_sets_for_prior:allow_empty=1} !{prop:--frac-gene-sets-for-prior:result:frac_gene_sets_for_prior:if_prop=frac_gene_sets_for_prior:allow_empty=1} !{prop:--p-noninf:result:p_noninf_sim:missing_prop=p_noninf} !{prop:--sigma-power:result:sigma_power_sim:missing_prop=sigma_power} !{prop:--sim-log-bf-noise-sigma-mult:result:sim_log_bf_noise_sigma_mult} !{prop:--prune-gene-sets:result:prune_gene_sets:if_prop=prune_gene_sets:allow_empty=1} !{raw:--prune-deterministically:result::if_prop=prune_gene_sets:allow_empty=1} --update-hyper none --ols --gene-set-stats-out \$gss_tmp_in --gene-stats-out \$gs_tmp_in >>!{output::_result__log_file} 2>&1 && echo "Beta \$i" >>!{output::_result__log_file} 2>&1 && $calc_cmd !{raw::result:naive_priors:if_prop=do_naive_priors:allow_empty=1} !{raw::result:gibbs:unless_prop=do_naive_priors:allow_empty=1} --linear !{input;--X-in;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;unless_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1} !{input;--Xd-in;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;if_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1} !{input;--X-list;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;unless_prop=is_dense;if_prop=is_list_of_lists;allow_empty=1} !{input;--Xd-list;gene_set_list_file;if_prop=gene_set_list:eq:@gene_set_lists;if_prop=is_dense;if_prop=is_list_of_lists;allow_empty=1} !{prop:--background-prior:result:background_prior:if_prop=background_prior:allow_empty=1} !{prop:--sigma2:result:sigma2:if_prop=sigma2:unless_prop=top_gene_set_prior:unless_prop=sigma2_ext:allow_empty=1} !{prop:--sigma2-ext:result:sigma2_ext:if_prop=sigma2_ext:unless_prop=top_gene_set_prior:allow_empty=1} !{prop:--top-gene-set-prior:result:top_gene_set_prior:if_prop=top_gene_set_prior:allow_empty=1} !{prop:--num-gene-sets-for-prior:result:num_gene_sets_for_prior:if_prop=num_gene_sets_for_prior:allow_empty=1} !{prop:--frac-gene-sets-for-prior:result:frac_gene_sets_for_prior:if_prop=frac_gene_sets_for_prior:allow_empty=1} !{prop:--p-noninf:result:p_noninf} !{prop;--sigma-power;result;sigma_power} !{raw:--prune-deterministically:result::if_prop=prune_gene_sets:allow_empty=1} !{prop:--prune-gene-sets:result:prune_gene_sets:if_prop=prune_gene_sets:allow_empty=1} !{prop:--update-hyper:result:update_hyper:missing=none} --ols !{raw::result:--use-sampling-for-betas 1:if_prop=do_naive_priors:allow_empty=1} --no-filter-negative !{prop:--filter-gene-set-p:result:filter_gene_set_p:missing=1} !{prop:--max-gene-set-p:result:filter_gene_set_p:missing=1} !{prop:--num-chains:result:num_chains} !{prop:--num-chains-betas:result:num_chains_betas} !{prop:--max-num-iter:result:max_num_iter} !{prop:--min-num-iter:result:min_num_iter:if_prop=min_num_iter:allow_empty=1} !{prop::result:extra_flags:if_prop=extra_flags:allow_empty=1} --gene-bfs-in \$gs_tmp_in --gene-bfs-id-col Gene --gene-bfs-log-bf-col prior --gene-set-stats-out \$gss_tmp_out --gene-stats-out \$gs_tmp_out >>!{output::_result__log_file} 2>&1 && $smart_join_cmd --in-delim $'\t' --exec "$smart_cut_cmd --tab-delim --file \$gs_tmp_in --select-col 1,1,'Gene prior log_bf' --exact --require-col-match | sed '1 s/prior\tlog_bf/iteration\tprior_in\tlog_bf_in/' | sed '1! s/\t/\t\$i\t/'" --file \$gs_tmp_out --header 1 | (sed -u 1q; sort -grk3) | if [[ \$i -gt 0 ]]; then tail -n+2; else cat; fi >> !{output::_result__gene_stats_out_file} && $smart_join_cmd --in-delim $'\t' --exec "$smart_cut_cmd --tab-delim --file \$gss_tmp_in --select-col 1,1,'Gene_Set P beta_tilde SE beta sigma2_used' --exact --require-col-match | sed '1 s/P\tbeta_tilde\tSE\tbeta\tsigma2_used/iteration\tP_in\tbeta_tilde_in\tSE_in\tbeta_in\tsigma2_used_in/' | sed '1! s/\t/\t\$i\t/'" --file \$gss_tmp_out --header 1 | (sed -u 1q; sort -grk3) | if [[ \$i -gt 0 ]]; then tail -n+2; else cat; fi >> !{output::_result__gene_set_stats_out_file}; status=\$?; if [[ \$status -ne 0 ]]; then exit \$status; fi; done) class_level _result_ run_if beta_tilde_strategy:eq:sim skipif

!!expand:gene_stats:gene_stats:gene_set_stats! \
local cmd make_cat_result_rep_gene_stats_files=(head -n1 !{input::result_rep_gene_stats_out_file:limit=1} | sed 's/\t/\trep_num\t/' !{raw::result_rep: && tail -qn+2 *result_rep_gene_stats_out_file | sed 's/\t/\t@rep_num\t/'}) !{input:result_rep_gene_stats_out_file} > !{output::result_gene_stats_out_file} class_level result run_if result_rep

local cmd make_cat_result_chrom_gene_stats_files=(head -n1 !{input::result_chrom_gene_stats_out_file:limit=1} !{raw::result_chrom: && $smart_cut_cmd --tab-delim --file *result_chrom_gene_stats_out_file --exclude-row 1,1 --select-row 1,1,Chrom,@hold_out_chrom --exact} | sort -grk2) !{input:result_chrom_gene_stats_out_file} > !{output::result_gene_stats_out_file} class_level result run_if result_chrom

!!expand:result_calc:result_calc_core:result_calc_output! \
result_calc_magma_rank_cmd=$result_calc_cmd(@1) !{input;--gene-cor-file;result_cor_file;if_prop=read_correlations;allow_empty=1} !{input:--gene-percentiles-in:result_in_file} !{prop:--background-prior:result:background_prior:if_prop=background_prior:allow_empty=1} !{prop:--top-posterior:result:top_posterior} !{prop:--gene-percentiles-id-col:result:gene_percentiles_id_col} !{raw:--gene-percentiles-higher-is-better:result::if_prop=gene_percentiles_higher_is_better:allow_empty=1} !{prop:--gene-percentiles-value-col:result:gene_percentiles_value_col}

!!expand:result_calc:result_calc_core:result_calc_output! \
result_calc_magma_z_cmd=$result_calc_cmd(@1) !{input;--gene-cor-file;result_cor_file;if_prop=read_correlations;allow_empty=1} !{input:--gene-zs-in:result_in_file} !{prop:--background-prior:result:background_prior:if_prop=background_prior:allow_empty=1} !{prop:--gws-prob-true:result:gws_prob_true} !{prop:--max-mean-posterior:result:max_mean_posterior} !{prop:--gws-threshold:result:gws_threshold} !{prop:--gene-zs-id-col:result:gene_zs_id_col} !{prop:--gene-zs-value-col:result:gene_zs_value_col}

!!expand:result_calc:result_calc_core:result_calc_output! \
result_calc_pops_cmd=$result_calc_cmd(@1) !{input:--gene-zs-in:result_in_file} !{prop:--background-prior:result:background_prior:if_prop=background_prior:allow_empty=1} !{prop:--gene-loc-file:result:project_initial_geneloc_file}

calc_mem=3000

!!expand:_strategy_:huge:magma_rank:magma_rank:magma_z:pops! \
cmd make_result__strategy__output_files=$result_calc_output__strategy__cmd(!{raw;;result;gibbs;unless_prop=beta_tilde_strategy:eq:pops;allow_empty=1}!{raw;;result;naive_pops;if_prop=beta_tilde_strategy:eq:pops;allow_empty=1}) !{output:--params-out:result_params_out_file} --debug-level 3 >& !{output::result_log_file} class_level result run_if beta_tilde_strategy:eq:_strategy_ rusage_mod $calc_mem  skip_if or,run_loco,result_rep

!!expand:_strategy_:huge:magma_rank:magma_rank:magma_z:gene_bf! \
cmd make_result_rep__strategy__output_files=$result_rep_calc_output__strategy__cmd(gibbs) --debug-level 3 >& !{output::result_rep_log_file} class_level result_rep run_if beta_tilde_strategy:eq:_strategy_ rusage_mod $calc_mem

!!expand:_strategy_:huge:magma_rank:magma_z! \
cmd make_result_rep__strategy__output_files=$result_calc_core__strategy__cmd(gibbs) !{output:--gene-stats-out:result_rep_gene_stats_out_file} !{output:--gene-set-stats-out:result_rep_gene_set_stats_out_file} !{output:--gene-stats-trace-out:result_rep_gene_stats_trace_out_gz_file:if_prop=write_gene_stats_trace:allow_empty=1} !{output:--gene-set-stats-trace-out:result_rep_gene_set_stats_trace_out_gz_file:if_prop=write_gene_set_stats_trace:allow_empty=1} !{output:--warnings-file:result_rep_warnings_file} --debug-level 3 >& !{output::result_rep_log_file} class_level result_rep run_if beta_tilde_strategy:eq:_strategy_ rusage_mod $calc_mem

cmd make_result_chrom_huge_output_files=$result_calc_core_huge_cmd(gibbs) !{prop:--hold-out-chrom:result_chrom:hold_out_chrom} !{output:--gene-stats-out:result_chrom_gene_stats_out_file} !{output:--gene-set-stats-out:result_chrom_gene_set_stats_out_file} !{output:--gene-gene-set-stats-out:result_chrom_gene_gene_set_stats_out_file} !{output:--warnings-file:result_chrom_warnings_file} --debug-level 3 >& !{output::result_chrom_log_file} class_level result_chrom run_if beta_tilde_strategy:eq:huge rusage_mod $calc_mem

!!expand:_strategy_:huge:magma_rank:magma_z:pops! \
cmd make_result__strategy__priors_file=$result_calc_core__strategy__cmd(!{raw;;result;priors;unless_prop=beta_tilde_strategy:eq:pops;allow_empty=1}!{raw;;result;pops;if_prop=beta_tilde_strategy:eq:pops;allow_empty=1}) !{prop:--gene-loc-file:result:project_initial_geneloc_file:unless_prop=ols_corrected:allow_empty=1} !{input;--gene-cor-file;result_cor_file;unless_prop=ols_corrected;if_prop=read_correlations;allow_empty=1} !{output:--gene-stats-out:result_priors_out_file} --debug-level 3 >& !{output::result_priors_log_file} class_level result run_if beta_tilde_strategy:eq:_strategy_ rusage_mod $calc_mem run_with result_chrom run_with result_rep

prop alpha0=scalar
prop beta0=scalar
prop min_gene_set_beta_uncorrected=scalar default 1e-20
prop gene_set_filter_type=scalar default beta_uncorrected
prop gene_set_filter_value=scalar default 0.01
prop gene_filter_type=scalar default combined 
prop gene_filter_value=scalar default 0
prop gene_set_multiply_type=scalar
prop gene_multiply_type=scalar
prop no_transpose=scalar
prop lmm_label=scalar

#this defines openai_key=${your_key_value}
!include $lap_trunk/config/lmm.cfg

!!expand:_strategy_:huge:magma_rank:magma_z:gene_bf:pops! \
cmd make_factor__strategy__factors_file=$result_calc_core__strategy__cmd(factor) !{input:--gene-bfs-in:result_gene_stats_out_file} !{input:--gene-set-stats-in:result_gene_set_stats_out_file} !{output:--factors-out:factor_factors_out_file} !{output:--marker-factors-out:factor_marker_factors_out_file} !{output:--gene-clusters-out:factor_gene_clusters_out_file} !{output:--gene-set-clusters-out:factor_gene_set_clusters_out_file} --debug-level 3 --gene-bfs-id-col Gene --gene-bfs-log-bf-col log_bf !{raw;--gene-bfs-combined-col;result;combined;unless_prop=beta_tilde_strategy:eq:pops;allow_empty=1} !{raw;--gene-bfs-combined-col;result;prior;if_prop=beta_tilde_strategy:eq:pops;allow_empty=1} --gene-bfs-prior-col prior --gene-set-stats-id-col Gene_Set --gene-set-stats-beta-uncorrected-col beta_uncorrected --gene-set-stats-beta-col beta !{prop:--alpha0:factor:alpha0:if_prop=alpha0:allow_empty=1} !{prop:--beta0:factor:beta0:if_prop=beta0:allow_empty=1} !{raw::factor:--no-transpose:if_prop=no_transpose:allow_empty=1} !{prop:--min-gene-set-read-beta-uncorrected:factor:min_gene_set_beta_uncorrected} !{prop;--gene-set-filter-type;factor;gene_set_filter_type;if_prop=gene_set_filter_type:defined;allow_empty=1} !{prop;--gene-set-filter-value;factor;gene_set_filter_value;if_prop=gene_set_filter_value:defined;allow_empty=1} !{prop;--gene-filter-type;factor;gene_filter_type;if_prop=gene_filter_type:defined;allow_empty=1} !{prop;--gene-filter-value;factor;gene_filter_value;if_prop=gene_filter_value:defined;allow_empty=1} !{prop;--gene-set-multiply-type;factor;gene_set_multiply_type;if_prop=gene_set_multiply_type:defined;allow_empty=1} !{prop;--gene-multiply-type;factor;gene_multiply_type;if_prop=gene_multiply_type:defined;allow_empty=1} !{raw:--lmm-auth-key:factor:$openai_key:if_prop=lmm_label:allow_empty=1} >& !{output::factor_factors_log_file} class_level factor run_if beta_tilde_strategy:eq:_strategy_ rusage_mod $calc_mem

prop min_indirect=scalar default 0.5
prop min_combined=scalar default 3
prop spring_k=scalar default 5

short cmd make_factor_graph_files=$factor_graph_cmd !{input:--gene-factors-in:factor_gene_factors_out_file} !{input:--factors-in:factor_factors_out_file} !{output:--pdf-out:factor_graph_pdf_file} !{output:--html-out:factor_graph_html_file} !{prop:--min-gene-indirect:factor:min_indirect:if_prop=min_indirect} !{prop:--gene-min-combined:factor:min_combined} --use-physics class_level factor

prop gene_phewas_file=scalar
prop gene_phewas_id_col=scalar
prop gene_phewas_pheno_col=scalar
prop gene_phewas_stat_col=scalar
prop factor_phewas_gene_weight_col=scalar
prop factor_phewas_gene_cov_cols=list
prop filter_to_factor_genes=scalar default 1

short cmd make_factor_phewas_out_file=$factor_phewas_cmd !{input:--factors-in:factor_gene_factors_out_file} --factors-gene-id-col Gene --factors-gene-factor-cols `head -n1 !{input::factor_gene_factors_out_file} | sed 's/\t/\n/g' | fgrep Factor | tr '\n' , | sed 's/,$//'` !{prop:--factors-gene-weight-col:factor_phewas:factor_phewas_gene_weight_col:if_prop=factor_phewas_gene_weight_col:allow_empty=1} !{raw:--filter-to-factor-genes:factor_phewas::if_prop=filter_to_factor_genes:allow_empty=1} !{raw:--factors-gene-cov-col:factor_phewas::if_prop=factor_phewas_gene_cov_cols:allow_empty=1} !{prop::factor_phewas:factor_phewas_gene_cov_cols:if_prop=factor_phewas_gene_cov_cols:allow_empty=1:sep=,}  !{prop:--gene-stats-in:factor_phewas:gene_phewas_file} !{prop:--gene-stats-id-col:factor_phewas:gene_phewas_id_col} !{prop:--gene-stats-pheno-col:factor_phewas:gene_phewas_pheno_col} !{prop:--gene-stats-assoc-stat-col:factor_phewas:gene_phewas_stat_col} !{output:--output-file:factor_phewas_out_file} !{output:--output-provenance-file:factor_phewas_provenance_out_file} !{output:--log-file:factor_phewas_log_file} class_level factor_phewas

prop phewas_category_map=scalar
prop phewas_category_map_category_col=scalar default 1
prop phewas_category_map_pheno_col=scalar default 2

phewas_sort_col=P_robust

local cmd make_factor_phewas_parsed_out_file=sort_col=`head -n1 !{input::factor_phewas_out_file} | sed 's/\t/\n/g' | awk '\\$1 == "$phewas_sort_col" {print NR+3}'`; $smart_join_cmd --in-delim $'\t' --exec "$smart_cut_cmd --tab-delim !{input:--file:factor_factors_out_file} --select-col 1,1,'Factor label top_genes' --exact --require-col-match" !{input:--file:factor_phewas_out_file} --header 1 --multiple 2 | cat !{prop::factor_phewas:phewas_category_map:if_prop=phewas_category_map:allow_empty=1} - | awk -F"\t" -v OFS="\t" 'NF == 2 {m[\$!{prop::factor_phewas:phewas_category_map_pheno_col}]=\$!{prop::factor_phewas:phewas_category_map_category_col}} NF > 2 {if (m[\$4]) {\$4=\$4"\t"m[\$4]} else {\$4=\$4"\tUncategorized"} print}' | sed '1 s/Uncategorized/Category/' | (sed -u 1q; sed 's/^Factor//' | sort -t$'\t' -k1,1n -k\$sort_col,\${sort_col}g | sed 's/^/Factor/' ) > !{output::factor_phewas_parsed_out_file} class_level factor_phewas

local cmd make_factor_phewas_parsed_out_file=sort_col=`head -n1 !{input::factor_phewas_out_file} | sed 's/\t/\n/g' | awk '\\$1 == "$phewas_sort_col" {print NR+3}'`; $smart_join_cmd --in-delim $'\t' --exec "$smart_cut_cmd --tab-delim !{input:--file:factor_factors_out_file} --select-col 1,1,'Factor label top_genes' --exact --require-col-match" !{input:--file:factor_phewas_out_file} --header 1 --multiple 2 | cat !{prop::factor_phewas:phewas_category_map:if_prop=phewas_category_map:allow_empty=1} - | awk -F"\t" -v OFS="\t" 'NF == 2 {m[\$!{prop::factor_phewas:phewas_category_map_pheno_col}]=\$!{prop::factor_phewas:phewas_category_map_category_col}} NF > 2 {if (m[\$4]) {\$4=\$4"\t"m[\$4]} else {\$4=\$4"\tUncategorized"} print}' | sed '1 s/Uncategorized/Category/' | (sed -u 1q; sed 's/^Factor//' | sort -t$'\t' -k1,1n -k\$sort_col,\${sort_col}g | sed 's/^/Factor/' ) > !{output::factor_phewas_parsed_out_file} class_level factor_phewas

phewas_p_value_threshold=0.005
phewas_p_col=P_robust
phewas_p_binary_col=P_binary
phewas_p_binary_comp_col=P_robust
phewas_z_col=Z_robust

binary_frac_required=10

local cmd make_factor_phewas_clean_binary_parsed_out_file=p_col=`head -n1 !{input::factor_phewas_parsed_out_file} | sed 's/\t/\n/g' | awk '\\$1 == "$phewas_p_binary_comp_col" {print NR}'`; p_binary_col=`head -n1 !{input::factor_phewas_parsed_out_file} | sed 's/\t/\n/g' | awk '\\$1 == "$phewas_p_binary_col" {print NR}'`; cat !{input::factor_phewas_parsed_out_file} | (sed -u 1q; awk -F"\t" -v OFS="\t" -v p_col=\$p_col -v p_binary_col=\$p_binary_col '\$p_binary_col < $binary_frac_required * \$p_col') > !{output::factor_phewas_clean_binary_parsed_out_file} class_level factor_phewas

!!expand:,:_phewas_,extratitle:_phewas_,:_phewas_clean_binary_,(clean binary)! \
short cmd make_factor_phewas_pdf_file=i=1; tmp_files=""; for factor in `$smart_cut_cmd --tab-delim !{input:--file:factor_phewas_parsed_out_file} --select-col 1,1,'Factor' --exact --require-col-match --exclude-row 1,1 | sed 's/^Factor//' | sort -k1,1n | uniq`; do tmp_file=!{output::factor_phewas_pdf_file}.tmp.\$i.pdf; label=`$smart_cut_cmd --tab-delim !{input:--file:factor_phewas_parsed_out_file} --select-row 1,1,Factor,"Factor\$factor$" --select-col 1,1,label | sort -u | head -n1`; $smart_cut_cmd --tab-delim !{input:--file:factor_phewas_parsed_out_file} --select-col 1,1,'Category Pheno $phewas_p_col' --select-row 1,1 --select-row 1,1,Factor\$factor$ --select-row 1,1,$phewas_p_col,le:$phewas_p_value_threshold --and-row-all --exact --require-col-match | awk -F"\t" -v OFS="\t" 'NR > 1 {\$NF=-log(\$NF)/log(10)} {print}' | sed "s/['\"]//g" | Rscript $common_bin_dir/draw_bar_plot.R /dev/stdin \$tmp_file "!{prop::trait:disp} !{prop::factor:disp} !{prop::factor_phewas:disp} \$label p<$phewas_p_value_threshold extratitle" "-log_10(P)" $phewas_p_col Pheno group.col=Category sep=$'\t' width.scale=2 height.scale=1.7; i=$((\$i+1)); tmp_files=\$tmp_files" "\$tmp_file;  done && gs -o - -sDEVICE=pdfwrite -dAutoRotatePages=/None \$tmp_files > !{output::factor_phewas_pdf_file} && rm -f \$tmp_files class_level factor_phewas

heatmap_p_value_threshold=0.001 0.0001 0.00001

#!!expand:,:noscale,none:noscale,none:traitscale,column! \
!!expand:,:_phewas_,extratitle:_phewas_,:_phewas_clean_binary_,(clean binary)! \
local cmd make_factor_phewas_noscale_heatmap_pdf_file=i=1; tmp_files=""; for p_value in $heatmap_p_value_threshold; do tmp_file=!{output::factor_phewas_noscale_heatmap_pdf_file}.tmp.\$i.pdf; sed "s/[\"']//g" !{input::factor_phewas_parsed_out_file} | $smart_cut_cmd --tab-delim --select-row 0,1 --select-row 0,1,$phewas_p_col,le:\$p_value --select-col 0,1,'label top_genes Factor Pheno $phewas_z_col' --exact --require-col-match | sed '1! s/\t\(\S\S*\)\t/ (\1)\t/' | sed '1 s/\ttop_genes//' | Rscript $common_bin_dir/draw_heatmap.R /dev/stdin \$tmp_file "!{prop::trait:disp} !{prop::factor:disp} !{prop::factor_phewas:disp} p<\$p_value extratitle" Factor Pheno label Pheno $phewas_z_col sep=$'\t' height.scale=2 width.scale=4 hor.mar=0 vert.mar=25 scale=none; i=$((\$i+1)); tmp_files=\$tmp_files" "\$tmp_file; done && gs -o - -sDEVICE=pdfwrite -dAutoRotatePages=/None \$tmp_files > !{output::factor_phewas_noscale_heatmap_pdf_file} && rm -f \$tmp_files class_level factor_phewas

#local cmd make_result_sigma_transposed_out_file=$transpose_cmd --in-delim $'\t' !{input::result_params_out_file} | sed '1 s/^/Result\t/' | sed '1! s/^/\t!{prop::result}/' > !{output::result_sigma_transposed_out_file} class_level result

#local cmd make_trait_sigma_transposed_out_file=head -qn1 !{input::result_sigma_transposed_out_file:limit=1} && tail -qn+2 !{input::result_sigma_transposed_out_file} | sed '1 s/^/Trait\t/' | sed '1! s/^/\t!{prop::trait}/' > !{output::trait_sigma_transposed_out_file} class_level trait

#local cmd make_project_sigma_transposed_out_file=head -qn1 !{input::trait_sigma_transposed_out_file:limit=1} && tail -qn+2 !{input::trait_sigma_transposed_out_file} > !{output::project_sigma_transposed_out_file} class_level project

!!expand:result_calc:result_calc_core:result_calc_output:result_rep_calc_output! \
result_calc_gene_bf_cmd=$result_calc_cmd(@1) !{input:--gene-bfs-in:result_in_file} !{prop:--gene-loc-file:result:project_initial_geneloc_file:allow_empty=1} !{prop:--background-prior:result:background_prior:if_prop=background_prior:allow_empty=1} !{prop:--gene-bfs-id-col:result:gene_bfs_id_col} !{prop:--gene-bfs-bf-col:result:gene_bfs_bf_col:if_prop=gene_bfs_bf_col:allow_empty=1} !{prop:--gene-bfs-log-bf-col:result:gene_bfs_log_bf_col:if_prop=gene_bfs_log_bf_col:allow_empty=1}

cmd make_result_gene_bf_output_files=$result_calc_output_gene_bf_cmd(gibbs) !{output:--params-out:result_params_out_file} class_level result run_if beta_tilde_strategy:eq:gene_bf rusage_mod $calc_mem

prop project_gene_stats_file=scalar

num_enrichment=2000

prop p_value_file_gene_col=scalar default 1
prop p_value_file_p_col=scalar default 2

!!expand:,:class_to_run,_exomes_,_outf_,result_priors_out_file,sortcol,sortdir:result,exomes,exomes,result_priors_out_file,prior,gr:result,gwas_genes,gwas_genes,result_priors_out_file,prior,gr:magma,exomes,exomes,magma_genes_out_file,P,g:result,exomes,exomes_combined,result_gene_stats_out_file,combined,gr:result,exomes,exomes_combined_priors,result_gene_stats_out_file,prior,gr! \
short cmd make_class_to_run__outf__enrichment_txt_file=cat !{input::result_priors_out_file} | $smart_cut_cmd --out-delim $'\t' --select-col 0,1 --select-col 0,1,sortcol --exact --require-col-match --exclude-row 0,1 | sort -sortdirk2 | awk 'NR <= $num_enrichment' | python -u $targeted_bin_dir/exomes_enrichment.py --gene-list-file /dev/stdin --p-value-file !{input::trait__exomes__file} !{prop:--p-value-file-gene-col:trait:p_value_file_gene_col} !{prop:--p-value-file-p-col:trait:p_value_file_p_col} --debug-level 2 !{prop:--gene-stats-file:project:project_gene_stats_file:if_prop=project_gene_stats_file:allow_empty=1} --gene-stats-file-gene-col 1 --gene-stats-file-stats-col 2 --gene-stats-file-stats-col 3 --gene-stats-file-stats-col 4 --gene-stats-file-stats-col 5 --num-match 50 --progressive-mode  > !{output::class_to_run__outf__enrichment_txt_file} class_level class_to_run

!!expand:,:_exomes_,_outf_,_gene_stats_out_,_priorcol_:exomes,exomes,_priors_out_,prior:gwas_genes,gwas_genes,_priors_out_,prior:exomes,exomes_combined,_gene_stats_out_,combined:exomes,exomes_combined_priors,_gene_stats_out_,prior! \
local cmd make_result__outf__enrichment_parsed_txt_file=$smart_join_cmd --header 1 --in-delim $'\t' --exec "$smart_join_cmd --in-delim $'\t' --exec \"cut -f2- !{input::result__outf__enrichment_txt_file} | sed '1 s/\(.*\)/\1\n\1/' | sed '2 s/^\(\S\S*\)\t\(\S\S*\)/1\tNA/' | cut -f1,2 | sed '1 s/.*/Rank\tEnrichment_P/'\" --exec \"$smart_cut_cmd --tab-delim !{input:--file:result_gene_stats_out_file} --exact --require-col-match --select-col 1,1,'Gene _priorcol_' | tail -n+2 | sort -grk2 | awk -v OFS=\\\"\\\t\\\" '{print NR,\\\\$0}' | sed '1 s/^/Rank\tGene\tprior\n/'\" --header 1 --col 1,1 --col 2,1 --fill 1 --extra 1" --exec "cat !{input::trait__exomes__file}" --extra 2 --fill 2 --col 1,3 --col 2,1 | sort -gk2 | sed '1 s/\(\S\S*\)/\1__outf_/g' > !{output::result__outf__enrichment_parsed_txt_file} class_level result

local cmd make_result_enrichment_parsed_txt_file=$smart_join_cmd --header 1 --in-delim $'\t' !{input:--file:result_exomes_combined_enrichment_parsed_txt_file} !{input:--file:result_exomes_combined_priors_enrichment_parsed_txt_file} !{input:--file:result_exomes_enrichment_parsed_txt_file} --col 2 | $smart_cut_cmd --tab-delim --exclude-col 0,1,Num_tests --exclude-col 0,1,Chosen_P-value | sort -gk1 > !{output::result_enrichment_parsed_txt_file} class_level result

local cmd make_magma_exomes_enrichment_parsed_txt_file=$smart_join_cmd --header 1 --in-delim $'\t' --exec "$smart_join_cmd --in-delim $'\t' --exec \"cut -f2- !{input::magma_exomes_enrichment_txt_file} | sed '1 s/\(.*\)/\1\n\1/' | sed '2 s/^\(\S\S*\)\t\(\S\S*\)/1\tNA/' | cut -f1,2 | sed '1 s/.*/Rank\tEnrichment_P/'\" --exec \"$smart_cut_cmd !{input:--file:magma_genes_out_file} --exact --require-col-match --select-col 1,1,'GENE P' | tail -n+2 | sort -gk2 | nl | sed 's/^\s\s*//' | sed 's/\s\s*/\t/g' | sed '1 s/^/Rank\tGene\tP\n/'\" --header 1 --col 1,1 --col 2,1 --fill 1 --extra 1" --exec "sed '1 s/\(\S\S*\)/\1_exomes/g' !{input::trait_exomes_file}" --extra 2 --fill 2 --col 1,3 --col 2,1 | sort -gk2 > !{output::magma_exomes_enrichment_parsed_txt_file} class_level magma

!!expand:,:result,_exomes_:result,exomes:result,gwas_genes:magma,exomes:result,exomes_combined:result,exomes_combined_priors! \
local cmd make_result__exomes__enrichment_pdf_file=Rscript $common_bin_dir/draw_line_plot.R !{input::result__exomes__enrichment_txt_file} !{output::result__exomes__enrichment_pdf_file} "Enrichment of top !{prop::trait:disp:missing_prop=trait} !{prop::result:disp:missing_prop=result} priors for __exomes__ associations" '\\# of top genes' 'Enrichment P-value' Rank 'P' legend.pos=right sep=$'\t' y.log=T cex=1.1 main.cex=1.1 plot.height=6 plot.width=8 hline=0.05 y2.col=Prop_true y2.label="Prop_true" class_level result

!!expand;,;gene_size,gene_stats,column,x_value,y_value,exrunif;gene_size,gene_stats,prior,Number of annotations,Gene indirect ABF,;priors_gene_size,priors,prior,Number of annotations,Gene indirect ABF,;gene_set_size,gene_set_stats,beta,Number of genes,Annotation effect,;priors_gene_set_size,gene_set_stats,beta_orig,Number of genes,Annotation effect,! \
local cmd make_result_gene_size_pdf_file=cut -f2- !{input::result_gene_stats_out_file} | sed '1 s/\(\t\|^\)N\(\t\|$\)/\1x_value\2/' | sed '1 s/\(\t\|^\)column\(\t\|$\)/\1y_value\2/' | sed 's/$/\tBlack/' | awk -F"\t" '\$1 != "NA"' | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_gene_size_pdf_file} "" "x_value,y_value" no.legend=True sep=$'\t' fill.col=Black do.lm=True hide.lm.p=T cex=1.4 class_level result exrunif

local cmd make_result_gene_sim_comp_pdf_file=cat !{input::result_gene_stats_out_file} | sed 's/$/\tBlack/' | sed '1 s/\tprior_in\t/\tSimulated gene indirect ABF\t/' | sed '1 s/\tprior\t/\tEstimated gene indirect ABF\t/' | $smart_cut_cmd --tab-delim --exclude-row 0,1,Gene,eq:NA | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_gene_sim_comp_pdf_file} "" "Simulated gene indirect ABF,Estimated gene indirect ABF" no.legend=True sep=$'\t' fill.col=Black identity.line=gray hline=0 vline=0 hline.color=gray do.lm=T hide.lm.p=T cex=1.4 class_level result run_if beta_tilde_strategy:eq:sim

local cmd make_result_gene_log_bf_sim_comp_pdf_file=cat !{input::result_gene_stats_out_file} | sed 's/$/\tBlack/' | sed '1 s/\tlog_bf_in\t/\tSimulated gene ABF\t/' | sed '1 s/\tprior\t/\tEstimated gene indirect ABF\t/' | $smart_cut_cmd --tab-delim --exclude-row 0,1,Gene,eq:NA | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_gene_log_bf_sim_comp_pdf_file} "" "Simulated gene ABF,Estimated gene indirect ABF" no.legend=True sep=$'\t' fill.col=Black identity.line=gray hline=0 vline=0 hline.color=gray do.lm=T hide.lm.p=T cex=1.4 class_level result run_if beta_tilde_strategy:eq:sim

local cmd make_result_gene_set_sim_venn_pdf_file=cat !{input::result_gene_set_stats_out_file} | $smart_cut_cmd --tab-delim --select-col 0,1,'Gene_Set beta_in beta' --exact --require-col-match | awk -F"\t" -v OFS="\t" 'NR > 1 && \$2 != 0 {\$2=1} NR > 1 && \$3 != 0 {\$3=1} {print}' | sed '1 s/beta_in/Simulated/' | sed '1 s/\tbeta$/\tEstimated/' |  Rscript $common_bin_dir/draw_venn_diagram.R /dev/stdin !{output::result_gene_set_sim_venn_pdf_file} "" cex=1.4 class_level result run_if beta_tilde_strategy:eq:sim use_mod R-3.5

local cmd make_result_gene_set_sim_comp_pdf_file=cat !{input::result_gene_set_stats_out_file} | $smart_cut_cmd --tab-delim --select-row 0,1 --select-row 0,1,beta_in,ne:0 --and-row-all | sed 's/$/\tBlack/' | sed '1 s/beta_in/Simulated annotation effect/' | sed '1 s/\tbeta\t/\tEstimated annotation effect\t/' | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_gene_set_sim_comp_pdf_file} "" "Simulated annotation effect,Estimated annotation effect" no.legend=True sep=$'\t' fill.col=Black identity.line=gray hline=0 vline=0 hline.color=gray do.lm=T hide.lm.p=T cex=1.4 class_level result run_if beta_tilde_strategy:eq:sim

#local cmd make_result_gene_set_sim_comp_pdf_file=cat !{input::result_gene_set_stats_out_file} | sed 's/$/\tBlack/' | sed '1 s/beta_in/Simulated annotation effect/' | sed '1 s/\tbeta\t/\tEstimated annotation effect\t/' | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_gene_set_sim_comp_pdf_file} "" "Simulated annotation effect,Estimated annotation effect" no.legend=True sep=$'\t' fill.col=Black identity.line=gray do.lm=T hide.lm.p=T cex=1.4 class_level result run_if beta_tilde_strategy:eq:sim

local cmd make_result_gene_comp_pdf_file=$smart_join_cmd --exec "cat !{input::result_priors_out_file} | sed '1 s/\t\(\S\S*\)/\t\1_orig/g'" !{input:--file:result_gene_stats_out_file} --header 1 --fill 2 --extra 2 | sed 's/$/\tBlack/' | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_gene_comp_pdf_file} "!{prop::trait:disp:missing_prop=trait} !{prop::result} prior_orig vs. prior_final gene value" prior_orig,prior no.legend=True sep=$'\t' fill.col=Black do.lm=True class_level result

local cmd make_result_gene_set_comp_pdf_file=cut -f2- !{input::result_gene_set_stats_out_file} | sed 's/$/\tBlack/' | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_gene_set_comp_pdf_file} "!{prop::trait:disp:missing_prop=trait} !{prop::result} beta comparison" beta_orig,beta no.legend=True sep=$'\t' fill.col=Black do.lm=True class_level result

local cmd make_result_known_gene_sets_comp_pdf_file=$smart_join_cmd --exec "sed '1 s/^\(\S\S*\)/Gene/' !{input::trait_known_gene_set_betas_file} | sed '1 s/\t\(\S\S*\)/\tKnown_beta/'" !{input:--file:result_gene_set_stats_out_file} --header 1 --fill 2 --extra 2 | sed 's/$/\tBlack/' | Rscript $common_bin_dir/draw_matrix_plot.R /dev/stdin !{output::result_known_gene_sets_comp_pdf_file} "!{prop::trait:disp:missing_prop=trait} !{prop::result} shrunk_beta vs. known beta" Known_beta,beta no.legend=True sep=$'\t' fill.col=Black do.lm=True class_level result run_if trait_simulate_gene_x_gene_sets_file

num_interesting=5
prop gene_value=scalar
local cmd make_result_interesting_genes_meta_file=for file in !{input::result_gene_stats_out_file} !{input::result_priors_out_file}; do tail -n+2 \$file | sort -grk2 | awk 'NR <= $num_interesting' | cut -f1; done | sort -u | awk '{class=\$1"_ig"; print class,"class","gene_inspection"; print class,"gene_value",\$1; print "!select:!{prop::project}:!{prop::trait}",class,"parent","!{prop::result}"}' > !{output::result_interesting_genes_meta_file} class_level result with gene_inspection

prop gene_set_value=scalar
local cmd make_result_interesting_gene_sets_meta_file=for col in beta; do $smart_cut_cmd --tab-delim !{input:--file:result_gene_set_stats_out_file} --select-col 1,1,"Gene_Set \$col" --exact --exclude-row 1,1 | sort -grk2 | awk 'NR <= $num_interesting' | cut -f1; done | sort -u | awk '{class=\$1"_igs"; print class,"class","gene_set_inspection"; print class,"gene_set_value",\$1; print "!select:!{prop::project}:!{prop::trait}",class,"parent","!{prop::result}"}' > !{output::result_interesting_gene_sets_meta_file} class_level result with gene_set_inspection

prop num_reps=scalar
prop rep_num=scalar
local cmd make_result_result_reps_meta_file=echo `seq 1 !{prop::result:num_reps}` | sed 's/\s\s*/\n/g' | awk '{class="result_rep_"\$1; print class,"class","result_rep"; print class,"rep_num",\$1; print "!select:!{prop::project}:!{prop::trait}",class,"parent","!{prop::result}"}' > !{output::result_result_reps_meta_file} class_level result run_if num_reps

prop run_loco=scalar
prop hold_out_chrom=scalar
local cmd make_result_result_chroms_meta_file=cut -f2 !{input::project_geneloc_file} | sort -u | awk '{class="result_chrom_"\$1; print class,"class","result_chrom"; print "!select:!{prop::project}:!{prop::trait}",class,"parent","!{prop::result}"; print class,"hold_out_chrom",\$1}' > !{output::result_result_chroms_meta_file} class_level result run_if run_loco

#local cmd make_gene_inspection_gene_set_stats_file=cat !{input;;gene_set_list_file;if_prop=gene_set_list:eq:\@gene_set_lists;unless_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1;instance_level=result} | awk '{for (i=2;i<=NF;i++) {if (\$i == "!{prop::gene_inspection}") {print \$1}}}' | sort -u | $smart_cut_cmd --stdin-first --tab-delim --exec "$smart_join_cmd --in-delim $'\t' --fill 2 --extra 2 !{input:--file:result_gene_set_stats_out_file}  --exec \"$smart_cut_cmd --tab-delim !{input:--file:result_gene_set_stats_out_file} --select-col 1,1,'Gene_Set N beta_tilde P beta avg_postp' --exact | sed '1 s/\(\S\S*\)/\1_global/g'\" --header 1" | awk 'BEGIN {m["Gene_Set"]=1} NF == 1 {m[\$1]=1} NF > 1 && m[\$1] {print}' > !{output::gene_inspection_gene_set_stats_file} class_level gene_inspection

local cmd make_gene_inspection_beta_comparison_pdf_file=$smart_cut_cmd --tab-delim --exec "cat !{input::result_gene_set_stats_out_file} | sed '1 s/$/\tColor/' | sed '1! s/$/\tBlack/'" --exec "cat !{input::gene_inspection_gene_set_stats_file} | sed '1 s/$/\tColor/' | sed '1! s/$/\tRed/'" --select-col .,1,'Gene_Set beta beta_orig Color' --exclude-row 2,1 --exact --require-col-match | $draw_matrix_plot_cmd /dev/stdin !{output::gene_inspection_beta_comparison_pdf_file} "Beta comparison for !{prop::result} !{prop::gene_inspection:gene_value}" beta,beta_orig fill.col=Color no.legend=T sep=$'\t' identity.line=black hline=0 vline=0 class_level gene_inspection

#local cmd make_gene_set_inspection_gene_set_stats_file=cat !{input;;gene_set_list_file;if_prop=gene_set_list:eq:\@gene_set_lists;unless_prop=is_dense;unless_prop=is_list_of_lists;allow_empty=1;instance_level=result} | awk -F"\t" '\$1 == "!{prop::gene_set_inspection}"' | sed 's/\s\s*/\t/g' | cut -f2- | sed 's/\t/\n/g' | $smart_cut_cmd --tab-delim !{input:--file:result_gene_stats_out_file} --stdin-first | awk 'NF == 1 {m[\$1]=1} NF > 1 && (m[\$1] || tolower(\$1) == "gene") {print}' > !{output::gene_set_inspection_gene_set_stats_file} class_level gene_set_inspection

local cmd make_gene_set_inspection_gene_bf_comparison_pdf_file=$smart_cut_cmd --tab-delim --exec "cut -f1-3 !{input::gene_set_inspection_gene_set_stats_file} | awk -F\"\t\" -v OFS=\"\t\" 'NR == 1 {print \\$0,\"Color\",\"Label\",1} NR > 1 {print \\$0,\"Red\",\\$1,3}'" --exec "cut -f1-3 !{input::result_gene_stats_out_file} | tail -n+2 | sed 's/$/\tGray\t\t2/'" | awk '!m[\$1] {print; m[\$1]=1}' | rev | sort -nk1 | rev | $draw_matrix_plot_cmd /dev/stdin !{output::gene_set_inspection_gene_bf_comparison_pdf_file} "BF comparison for !{prop::result} !{prop::gene_set_inspection:gene_set_value}" orig_log_bf,orig_log_bf_w fill.col=Color no.legend=T sep=$'\t' identity.line=black hline=0 vline=0 class_level gene_set_inspection run_if ols_corrected

!!expand:,:gene_set,Gene_Set:gene_set,Gene_Set:gene,Gene! \
local cmd make gene_set_inspection_trace_out_gz_file=zcat !{input::result_gene_set_stats_trace_out_gz_file} | awk -v gene_set=!{prop::gene_set_inspection:gene_set_value} '\$3 == gene_set || NR == 1' | gzip -c > !{output::gene_set_inspection_trace_out_gz_file} class_level gene_set_inspection run_if write_gene_set_stats_trace

!!expand:,:gene_set,Gene_Set,beta:gene_set,Gene_Set,beta:gene_set,Gene_Set,beta_tilde:gene_set,Gene_Set,postp:gene,Gene,prior! \
local cmd make_gene_set_inspection_beta_trace_pdf_file=plot_cols=""; flags=""; chains=`zcat !{input::gene_set_inspection_trace_out_gz_file} | tail -n+2 | cut -f2 | sort -nu`; for chain in \$chains; do flags=\$flags" --exec \"zcat !{input::gene_set_inspection_trace_out_gz_file} | awk 'NR == 1 || \\\\$2 == \$chain' | sed '1 s/\(\S\S*\)/\1_\$chain/g'\""; plot_cols=\$plot_cols",beta_\$chain"; done; plot_cols=`echo \$plot_cols | sed 's/^,//'`; eval $smart_join_cmd --header 1 --col 1 --rest-extra 1 --rest-fill 1 --fill-value 0 --exec "\"zcat !{input::gene_set_inspection_trace_out_gz_file} | cut -f1 | tail -n+2 | sort -u | sed '1 s/^/It\n/'\"" \$flags | sort -gk1 | Rscript $common_bin_dir/draw_line_plot.R /dev/stdin !{output::gene_set_inspection_beta_trace_pdf_file} "!{prop::gene_set_inspection:gene_set_value} beta trace" It beta 1 \$plot_cols no.legend=T class_level gene_set_inspection run_if write_gene_set_stats_trace

log_bf_label=Gene direct values
combined_label=Gene combined values
prior_label=Gene prior values
beta_label=Gene set beta values
beta_uncorrected_label=Gene set beta uncorrected values

prop paper_tag=scalar

!!expand:gene:gene:gene_set! \
local cmd make_paper_result_gene_stats_out_file=cp !{input::result_gene_stats_out_file} !{output::paper_result_gene_stats_out_file} class_level paper_result

!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
local cmd make_paper_result_gene_prior_hist_pdf_file=cut -f2- !{input::paper_result_gene_stats_out_file} | Rscript $common_bin_dir/draw_hist_plot.R /dev/stdin !{output::paper_result_gene_prior_hist_pdf_file} prior "" "$prior_label" cex=1.4 log=y class_level paper_result

!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
local cmd make_paper_project_gene_prior_hist_pdf_file=(head -n1 !{input;;paper_result_gene_stats_out_file;if_prop=paper_tag:eq:@paper_tag;limit=1} && tail -qn+2 !{input;;paper_result_gene_stats_out_file;if_prop=paper_tag:eq:@paper_tag}) | cut -f2- | Rscript $common_bin_dir/draw_hist_plot.R /dev/stdin !{output::paper_project_gene_prior_hist_pdf_file} prior "" "$prior_label" cex=1.4 log=y class_level paper_project

!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
local cmd make_paper_result_gene_prior_percentile_txt_file=nr=`$smart_cut_cmd --tab-delim --file !{input::paper_result_gene_stats_out_file} --select-col 1,1,prior --exclude-row 1,1 --exact --require-col-match | awk '\$1 != "NA"' | sort -gk1 | wc -l`; $smart_cut_cmd --tab-delim --file !{input::paper_result_gene_stats_out_file} --select-col 1,1,prior --exclude-row 1,1 --exact --require-col-match | awk '\$1 != "NA"' | sort -gk1 | awk -v nr=\$nr '{print -log(1-NR/(nr+1))/log(10),\$1}' | sed '1 s/^/log_percentile\tvalue\n/' > !{output::paper_result_gene_prior_percentile_txt_file} class_level paper_result

!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
local cmd make_paper_project_gene_prior_percentile_txt_file=nr=`(head -n1 !{input;;paper_result_gene_stats_out_file;if_prop=paper_tag:eq:@paper_tag;limit=1} && tail -qn+2 !{input;;paper_result_gene_stats_out_file;if_prop=paper_tag:eq:@paper_tag}) | $smart_cut_cmd --tab-delim --select-col 0,1,prior --exclude-row 0,1 --exact --require-col-match | awk '\$1 != "NA"' | sort -gk1 | wc -l`; (head -n1 !{input;;paper_result_gene_stats_out_file;if_prop=paper_tag:eq:@paper_tag;limit=1} && tail -qn+2 !{input;;paper_result_gene_stats_out_file;if_prop=paper_tag:eq:@paper_tag}) | $smart_cut_cmd --tab-delim --select-col 0,1,prior --exclude-row 0,1 --exact --require-col-match | awk '\$1 != "NA"' | sort -gk1 | awk -v nr=\$nr '{print -log(1-NR/(nr+1))/log(10),\$1}' | sed '1 s/^/log_percentile\tvalue\n/' > !{output::paper_project_gene_prior_percentile_txt_file} class_level paper_project

!!expand:paper_result:paper_result:paper_project! \
!!expand:,:gene,prior:gene,prior:gene,log_bf:gene,combined:gene_set,beta:gene_set,beta_uncorrected! \
local cmd make_paper_result_gene_prior_percentile_pdf_file=cat !{input::paper_result_gene_prior_percentile_txt_file} | Rscript $common_bin_dir/draw_line_plot.R /dev/stdin !{output::paper_result_gene_prior_percentile_pdf_file} "" "-log(Percentile)" "`echo prior | sed -e 's/^\(.\)/\u\1/g'`" 1 2 cex=1.4 class_level paper_result


#COMMANDS
#====================
