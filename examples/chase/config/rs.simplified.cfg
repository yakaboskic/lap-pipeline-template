
!title Relative Success Pipeline

lap_home=/humgen/diabetes2/users/chase/lap

#run with
#perl $lap_home/trunk/bin/run.pl --meta /path/to/meta/file
#web UI at
#https://intranet.broadinstitute.org/~flannick/lap/
#type in full path of meta file
#=======================================================================================================================
#CLASSES
#These are the levels at which files will be created and commands will be run
#You load instances for each class in the companion meta file
#A file assigned to the class will be created for each instance in the class
#A command assisnged to the class will run once per instance
#Classes are a tree structure, so ancestors have parents and descendents
#Each instance has properties, which by default are its instance name, ancestor instance names, and descendent instance names (accessible via @'class')
class project=Project
class method=Method parent project
class run=Run parent method

#=======================================================================================================================
#DIRECTORIES
#path prefix means this is a UNIX path
sortable mkdir path projects_dir=$unix_out_dir/projects
sortable mkdir path project_dir=$projects_dir/@project class_level project
sortable mkdir path method_dir=$project_dir/@method class_level method
sortable mkdir path run_dir=$method_dir/@run class_level run

# CATEGORIES
cat project_cat=null disp "Project files" class_level project
cat method_cat=null disp "Method files" class_level method
cat run_cat=null disp "Run files" class_level run

# PROPERTIES
# Falcon
prop p_prob=scalar
prop source=scalar
prop p_value=scalar
prop metric_name=scalar
prop metric_value=scalar

# FILES
## Project Level
table path file pharmaprojects_file=@project.pharmaprojects.tsv dir project_dir disp "Pharmaprojects" parent project_cat class_level project
table path file similarity_file=@project.similarity.tsv dir project_dir disp "Similarity" parent project_cat class_level project
table path file portal_to_mesh_map_file=@project.portal_to_mesh_map.tsv dir project_dir disp "Portal to Mesh Map" parent project_cat class_level project
table path file indications_file=@project.indications.tsv dir project_dir disp "Indications" parent project_cat class_level project

## Methods Level
table path file associations_file=@method.associations.tsv dir project_dir disp "Associations" parent method_cat class_level method
table path file method_stats_file=@method.stats.tsv dir method_dir disp "Method Stats" parent method_cat class_level method
table path file method_interative_plot_file=@method.interative_plot.html dir method_dir disp "Method Plot" parent method_cat class_level method

## Runs Level
run_trunk=@run dir run_dir
table path file relative_success_file=@run.relative_success.csv dir run_dir disp "Relative Success" parent run_cat class_level run
path file relative_success_log_file=@run.relative_success.log.txt dir run_dir disp "Relative Success Log" parent run_cat class_level run
table path file rs_forest_ccat_file=@run.relative_success.all.ccat.csv dir run_dir disp "RS Forest Ccat" parent run_cat class_level run
table path file rs_forest_hcat_file=@run.relative_success.all.hcat.csv dir run_dir disp "RS Forest Hcat" parent run_cat class_level run
table path file rs_forest_acat_file=@run.relative_success.all.acat.csv dir run_dir disp "RS Forest Acat" parent run_cat class_level run


# COMMANDS
## Project Level

## Methods Level
cmd collect_runs_cmd= $export_uv_cmd && \
    uv run \
    $pigean_bin_dir/collect_rs_runs.py \
    !{input:--associations-file:associations_file} \
    !{prop:--method:method} \
    !{prop:--run:run} \
    !{prop:--metric_name:run:metric_name} \
    !{prop:--metric_value:run:metric_value} \
    !{input:--run-rs-file:relative_success_file} \
    !{input:--run-forest-ccat-file:rs_forest_ccat_file} \
    !{input:--run-forest-hcat-file:rs_forest_hcat_file} \
    !{input:--run-forest-acat-file:rs_forest_acat_file} \
    !{output:--stats-file:method_stats_file} \
    !{output:--interative-plot-file:method_interative_plot_file} \
    class_level method

## Runs Level
cmd run_relative_success_falcon_cmd= $export_uv_cmd && \
    output_dir=$(dirname !{raw::run:*run_trunk}) && \
    uv run \
    $pigean_bin_dir/relative_success.py \
    !{input:--pharmaprojects-file:pharmaprojects_file} \
    !{input:--indications-file:indications_file} \
    !{input:--associations-file:associations_file} \
    !{input:--similarity-matrix-file:similarity_file} \
    --association-threshold "FALCON:pos_p:>=:!{prop::run:p_prob}:" \
    --association-threshold "FALCON:p_value:<=:!{prop::run:p_value}:" \
    !{prop:--out:run} \
    --out-dir "\$output_dir" \
    --similarity-matrix-format long \
    --no-contributions \
    --flatten-headers \
    --write-csv \
    --no-genetic-insight > !{output::relative_success_log_file}; \
    class_level run run_if method:eq:falcon

cmd run_relative_success_magma_cmd= $export_uv_cmd && \
    output_dir=$(dirname !{raw::run:*run_trunk}) && \
    uv run \
    $pigean_bin_dir/relative_success.py \
    !{input:--pharmaprojects-file:pharmaprojects_file} \
    !{input:--indications-file:indications_file} \
    !{input:--associations-file:associations_file} \
    !{input:--similarity-matrix-file:similarity_file} \
    --association-threshold "MAGMA:p_value:<=:!{prop::run:p_value}:" \
    !{prop:--out:run} \
    --out-dir "\$output_dir" \
    --similarity-matrix-format long \
    --no-contributions \
    --flatten-headers \
    --write-csv \
    --no-genetic-insight > !{output::relative_success_log_file}; \
    class_level run run_if method:eq:magma

cmd run_relative_success_pigean_cmd= $export_uv_cmd && \
    output_dir=$(dirname !{raw::run:*run_trunk}) && \
    uv run \
    $pigean_bin_dir/relative_success.py \
    !{input:--pharmaprojects-file:pharmaprojects_file} \
    !{input:--indications-file:indications_file} \
    !{input:--associations-file:associations_file} \
    !{input:--similarity-matrix-file:similarity_file} \
    --association-threshold "pigean:!{prop::run:metric_name}:>=:!{prop::run:metric_value}:" \
    !{prop:--out:run} \
    --out-dir "\$output_dir" \
    --similarity-matrix-format long \
    --no-contributions \
    --flatten-headers \
    --write-csv \
    --no-genetic-insight > !{output::relative_success_log_file}; \
    class_level run run_if method:eq:pigean

#=======================================================================================================================
#config files can be included
#common.cfg is required
lap_trunk=$lap_home/trunk
!include $lap_trunk/config/common.cfg
pigean_bin_dir=$lap_home/projects/pigean/bin
pigean_scripts_dir=$lap_home/projects/pigean/scripts
pigean_venv_dir=$lap_home/projects/pigean/.venv
export_uv_cmd=export UV_VENV_PATH=$pigean_venv_dir
# OVERWRITES
max_jobs=1000
default_mem=50000
max_sge_batch=500
# smp <cpu_number> -binding linear:<num_cores> means all cpus in same uger node
bsub_opts=-pe smp 1 -binding linear:1 
uger_short_time=00:30:00
bsub_short_time=00:30:00
#these are some useful scripts I wrote to process files
#this runs R-3.4
conditional_exec_cmd=perl $common_bin_dir/conditional_exec.pl
#join multiple files or commands
smart_join_cmd=perl $common_bin_dir/smart_join.pl
#concatenate / cut files or commands
smart_cut_cmd=perl $common_bin_dir/smart_cut.pl
add_function_cmd=perl $common_bin_dir/smart_cut.pl
bin_values_cmd=perl $common_bin_dir/bin_values.pl
#this can add a new column that's a function of other columns (add, divide, log, abs, etc.)
add_header_cmd=perl $common_bin_dir/add_header.pl
#transpose a file
transpose_cmd=perl $common_bin_dir/transpose.pl
#generate a nice pdf from the file
table_to_beamer_cmd=perl $common_bin_dir/table_to_beamer.pl
text_to_beamer_cmd=perl $common_bin_dir/text_to_beamer.pl
#pretty print columns (e.g. %.3g)
format_columns_cmd=perl $common_bin_dir/format_columns.pl
vcf_utils_cmd=perl $targeted_bin_dir/vcf_utils.pl
table_sum_stats_cmd=perl $common_bin_dir/table_sum_stats.pl

draw_qq_plot_cmd=Rscript $common_bin_dir/draw_qq_plot.R

#cmd_class prefix tells it to match on value of the key and then execute the postfixes
#postfix use_mod says run "use" when this command is run
#so just using "Rscript" in commands below will automatically load R-3.4
cmd_class rscript_cmd_class=Rscript use_mod R-3.4
cmd_class tabix_cmd_class=tabix use_mod Tabix
cmd_class bgzip_cmd_class=bgzip use_mod Tabix
cmd_class plink_cmd_class=plink use_mod PLINK2
#=======================================================================================================================